%{
#include <iostream>
#include <cstdio>

#define YY_DECL extern "C" int yylex()

using namespace std;

%}

%%
[\t\n]								;
\,									{cout<<"commma"<<endl;}
\;									{cout<<"semi colon"<<endl;}
class								{cout<<"class"<<endl;}
callout								{cout<<"callout"<<endl;}
if									{cout<<"IF condition"<<endl;}
for									{cout<<"FOR loop"<<endl;}
return								{cout<<"return statement"<<endl;}
break								{cout<<"break statement"<<endl;}
continue							{cout<<"continue statement"<<endl;}
void								{cout<<"void return type"<<endl;}
int									|
boolean								{cout<<"type"<<endl;}

true								|
false								{cout<<"boolean literal"<<endl;}

"\'\\n\'"|"\'\\t\'"|"\'\\\\\'"|"\'\\\'\'"|"\'\\\"\'"|"\'"."\'"	{cout<<"char literal"<<endl;}
\"(\\.|[^\\"])*\"					{cout<<"string literal"<<endl;}

[a-zA-Z][0-9a-zA-Z]*				{cout<<"identifier"<<endl;}


0x[0-9a-fA-F][0-9a-fA-F]*			{cout<<"hex literal"<<endl;}
[0-9][0-9]*							{cout<<"decimal literal"<<endl;}

\{									{cout<<"block open"<<endl;}
\}									{cout<<"block close"<<endl;}
\(									{cout<<"argument open"<<endl;}
\)									{cout<<"argument close"<<endl;}
\[									{cout<<"square open"<<endl;}
\]									{cout<<"square close"<<endl;}

\<									|
>									|
\<=									|
>=									{cout<<"relational operator"<<endl;}

\+									|
-									|
\*									|
\/									|
%									{cout<<"arithmetic operator"<<endl;}

&&									|
\|\|								{cout<<"condition operator"<<endl;}

\=									|
\+=									|
-=									{cout<<"assingment operator"<<endl;}

\=\=								|
!=									{cout<<"equality operator"<<endl;}
%%

int main(int,char**){
	yylex();
}
