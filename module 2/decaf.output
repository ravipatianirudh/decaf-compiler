Terminals unused in grammar

   HEX_LITERAL
   ERROR
   CONDITIONAL_OP
   EQUALITY_OP
   IF
   ELSE
   FOR
   BREAK
   CONTINUE
   RETURN
   VOID


Grammar

    0 $accept: program $end

    1 program: CLASS IDENTIFIER START_BLOCK body CLOSE_BLOCK
    2        | CLASS IDENTIFIER START_BLOCK CLOSE_BLOCK

    3 body: field statement
    4     | field

    5 field: field field_declaration
    6      | field_declaration

    7 field_declaration: TYPE id_list SEMI_COLON

    8 id_list: id_list COMMA id_decl
    9        | id_decl

   10 id_decl: IDENTIFIER
   11        | IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

   12 statement: location ASSIGNMENT_OP expression SEMI_COLON
   13          | CALLOUT OPEN_PARENTHESIS STRING_LITERAL OPEN_SQUARE_BRACKET callout_arguments CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMI_COLON

   14 location: IDENTIFIER
   15         | IDENTIFIER OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET

   16 callout_arguments: callout_arguments COMMA c_arg
   17                  | c_arg

   18 c_arg: expression
   19      | STRING_LITERAL

   20 expression: location
   21           | DECIMAL_LITERAL
   22           | CHAR_LITERAL
   23           | BOOLEAN_LITERAL
   24           | NEGATION expression
   25           | OP_MINUS expression
   26           | expression OP_MINUS expression
   27           | expression OP_PLUS expression
   28           | expression ARITHMETIC_OP expression
   29           | expression RELATIONAL_OP expression
   30           | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS


Terminals, with rules where they appear

$end (0) 0
error (256)
OP_PLUS (258) 27
IDENTIFIER (259) 1 2 10 11 14 15
TYPE (260) 7
BOOLEAN_LITERAL (261) 23
STRING_LITERAL (262) 13 19
CHAR_LITERAL (263) 22
HEX_LITERAL (264)
DECIMAL_LITERAL (265) 11 21
ERROR (266)
RELATIONAL_OP (267) 29
CONDITIONAL_OP (268)
ARITHMETIC_OP (269) 28
ASSIGNMENT_OP (270) 12
EQUALITY_OP (271)
OP_MINUS (272) 25 26
NEGATION (273) 24
CLASS (274) 1 2
SEMI_COLON (275) 7 12 13
COMMA (276) 8 16
CALLOUT (277) 13
IF (278)
ELSE (279)
FOR (280)
BREAK (281)
CONTINUE (282)
RETURN (283)
VOID (284)
START_BLOCK (285) 1 2
CLOSE_BLOCK (286) 1 2
OPEN_SQUARE_BRACKET (287) 11 13 15
CLOSE_SQUARE_BRACKET (288) 11 13 15
OPEN_PARENTHESIS (289) 13 30
CLOSE_PARENTHESIS (290) 13 30
UNARY_MINUS (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1 2, on right: 0
body (39)
    on left: 3 4, on right: 1
field (40)
    on left: 5 6, on right: 3 4 5
field_declaration (41)
    on left: 7, on right: 5 6
id_list (42)
    on left: 8 9, on right: 7 8
id_decl (43)
    on left: 10 11, on right: 8 9
statement (44)
    on left: 12 13, on right: 3
location (45)
    on left: 14 15, on right: 12 20
callout_arguments (46)
    on left: 16 17, on right: 13 16
c_arg (47)
    on left: 18 19, on right: 16 17
expression (48)
    on left: 20 21 22 23 24 25 26 27 28 29 30, on right: 12 15 18 24
    25 26 27 28 29 30


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . IDENTIFIER START_BLOCK body CLOSE_BLOCK
    2        | CLASS . IDENTIFIER START_BLOCK CLOSE_BLOCK

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS IDENTIFIER . START_BLOCK body CLOSE_BLOCK
    2        | CLASS IDENTIFIER . START_BLOCK CLOSE_BLOCK

    START_BLOCK  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS IDENTIFIER START_BLOCK . body CLOSE_BLOCK
    2        | CLASS IDENTIFIER START_BLOCK . CLOSE_BLOCK

    TYPE         shift, and go to state 6
    CLOSE_BLOCK  shift, and go to state 7

    body               go to state 8
    field              go to state 9
    field_declaration  go to state 10


State 6

    7 field_declaration: TYPE . id_list SEMI_COLON

    IDENTIFIER  shift, and go to state 11

    id_list  go to state 12
    id_decl  go to state 13


State 7

    2 program: CLASS IDENTIFIER START_BLOCK CLOSE_BLOCK .

    $default  reduce using rule 2 (program)


State 8

    1 program: CLASS IDENTIFIER START_BLOCK body . CLOSE_BLOCK

    CLOSE_BLOCK  shift, and go to state 14


State 9

    3 body: field . statement
    4     | field .
    5 field: field . field_declaration

    IDENTIFIER  shift, and go to state 15
    TYPE        shift, and go to state 6
    CALLOUT     shift, and go to state 16

    $default  reduce using rule 4 (body)

    field_declaration  go to state 17
    statement          go to state 18
    location           go to state 19


State 10

    6 field: field_declaration .

    $default  reduce using rule 6 (field)


State 11

   10 id_decl: IDENTIFIER .
   11        | IDENTIFIER . OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 20

    $default  reduce using rule 10 (id_decl)


State 12

    7 field_declaration: TYPE id_list . SEMI_COLON
    8 id_list: id_list . COMMA id_decl

    SEMI_COLON  shift, and go to state 21
    COMMA       shift, and go to state 22


State 13

    9 id_list: id_decl .

    $default  reduce using rule 9 (id_list)


State 14

    1 program: CLASS IDENTIFIER START_BLOCK body CLOSE_BLOCK .

    $default  reduce using rule 1 (program)


State 15

   14 location: IDENTIFIER .
   15         | IDENTIFIER . OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 23

    $default  reduce using rule 14 (location)


State 16

   13 statement: CALLOUT . OPEN_PARENTHESIS STRING_LITERAL OPEN_SQUARE_BRACKET callout_arguments CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMI_COLON

    OPEN_PARENTHESIS  shift, and go to state 24


State 17

    5 field: field field_declaration .

    $default  reduce using rule 5 (field)


State 18

    3 body: field statement .

    $default  reduce using rule 3 (body)


State 19

   12 statement: location . ASSIGNMENT_OP expression SEMI_COLON

    ASSIGNMENT_OP  shift, and go to state 25


State 20

   11 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET . DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

    DECIMAL_LITERAL  shift, and go to state 26


State 21

    7 field_declaration: TYPE id_list SEMI_COLON .

    $default  reduce using rule 7 (field_declaration)


State 22

    8 id_list: id_list COMMA . id_decl

    IDENTIFIER  shift, and go to state 11

    id_decl  go to state 27


State 23

   15 location: IDENTIFIER OPEN_SQUARE_BRACKET . expression CLOSE_SQUARE_BRACKET

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 28
    CHAR_LITERAL      shift, and go to state 29
    DECIMAL_LITERAL   shift, and go to state 30
    OP_MINUS          shift, and go to state 31
    NEGATION          shift, and go to state 32
    OPEN_PARENTHESIS  shift, and go to state 33

    location    go to state 34
    expression  go to state 35


State 24

   13 statement: CALLOUT OPEN_PARENTHESIS . STRING_LITERAL OPEN_SQUARE_BRACKET callout_arguments CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMI_COLON

    STRING_LITERAL  shift, and go to state 36


State 25

   12 statement: location ASSIGNMENT_OP . expression SEMI_COLON

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 28
    CHAR_LITERAL      shift, and go to state 29
    DECIMAL_LITERAL   shift, and go to state 30
    OP_MINUS          shift, and go to state 31
    NEGATION          shift, and go to state 32
    OPEN_PARENTHESIS  shift, and go to state 33

    location    go to state 34
    expression  go to state 37


State 26

   11 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET  shift, and go to state 38


State 27

    8 id_list: id_list COMMA id_decl .

    $default  reduce using rule 8 (id_list)


State 28

   23 expression: BOOLEAN_LITERAL .

    $default  reduce using rule 23 (expression)


State 29

   22 expression: CHAR_LITERAL .

    $default  reduce using rule 22 (expression)


State 30

   21 expression: DECIMAL_LITERAL .

    $default  reduce using rule 21 (expression)


State 31

   25 expression: OP_MINUS . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 28
    CHAR_LITERAL      shift, and go to state 29
    DECIMAL_LITERAL   shift, and go to state 30
    OP_MINUS          shift, and go to state 31
    NEGATION          shift, and go to state 32
    OPEN_PARENTHESIS  shift, and go to state 33

    location    go to state 34
    expression  go to state 39


State 32

   24 expression: NEGATION . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 28
    CHAR_LITERAL      shift, and go to state 29
    DECIMAL_LITERAL   shift, and go to state 30
    OP_MINUS          shift, and go to state 31
    NEGATION          shift, and go to state 32
    OPEN_PARENTHESIS  shift, and go to state 33

    location    go to state 34
    expression  go to state 40


State 33

   30 expression: OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 28
    CHAR_LITERAL      shift, and go to state 29
    DECIMAL_LITERAL   shift, and go to state 30
    OP_MINUS          shift, and go to state 31
    NEGATION          shift, and go to state 32
    OPEN_PARENTHESIS  shift, and go to state 33

    location    go to state 34
    expression  go to state 41


State 34

   20 expression: location .

    $default  reduce using rule 20 (expression)


State 35

   15 location: IDENTIFIER OPEN_SQUARE_BRACKET expression . CLOSE_SQUARE_BRACKET
   26 expression: expression . OP_MINUS expression
   27           | expression . OP_PLUS expression
   28           | expression . ARITHMETIC_OP expression
   29           | expression . RELATIONAL_OP expression

    OP_PLUS               shift, and go to state 42
    RELATIONAL_OP         shift, and go to state 43
    ARITHMETIC_OP         shift, and go to state 44
    OP_MINUS              shift, and go to state 45
    CLOSE_SQUARE_BRACKET  shift, and go to state 46


State 36

   13 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL . OPEN_SQUARE_BRACKET callout_arguments CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMI_COLON

    OPEN_SQUARE_BRACKET  shift, and go to state 47


State 37

   12 statement: location ASSIGNMENT_OP expression . SEMI_COLON
   26 expression: expression . OP_MINUS expression
   27           | expression . OP_PLUS expression
   28           | expression . ARITHMETIC_OP expression
   29           | expression . RELATIONAL_OP expression

    OP_PLUS        shift, and go to state 42
    RELATIONAL_OP  shift, and go to state 43
    ARITHMETIC_OP  shift, and go to state 44
    OP_MINUS       shift, and go to state 45
    SEMI_COLON     shift, and go to state 48


State 38

   11 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 11 (id_decl)


State 39

   25 expression: OP_MINUS expression .
   26           | expression . OP_MINUS expression
   27           | expression . OP_PLUS expression
   28           | expression . ARITHMETIC_OP expression
   29           | expression . RELATIONAL_OP expression

    $default  reduce using rule 25 (expression)


State 40

   24 expression: NEGATION expression .
   26           | expression . OP_MINUS expression
   27           | expression . OP_PLUS expression
   28           | expression . ARITHMETIC_OP expression
   29           | expression . RELATIONAL_OP expression

    $default  reduce using rule 24 (expression)


State 41

   26 expression: expression . OP_MINUS expression
   27           | expression . OP_PLUS expression
   28           | expression . ARITHMETIC_OP expression
   29           | expression . RELATIONAL_OP expression
   30           | OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS

    OP_PLUS            shift, and go to state 42
    RELATIONAL_OP      shift, and go to state 43
    ARITHMETIC_OP      shift, and go to state 44
    OP_MINUS           shift, and go to state 45
    CLOSE_PARENTHESIS  shift, and go to state 49


State 42

   27 expression: expression OP_PLUS . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 28
    CHAR_LITERAL      shift, and go to state 29
    DECIMAL_LITERAL   shift, and go to state 30
    OP_MINUS          shift, and go to state 31
    NEGATION          shift, and go to state 32
    OPEN_PARENTHESIS  shift, and go to state 33

    location    go to state 34
    expression  go to state 50


State 43

   29 expression: expression RELATIONAL_OP . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 28
    CHAR_LITERAL      shift, and go to state 29
    DECIMAL_LITERAL   shift, and go to state 30
    OP_MINUS          shift, and go to state 31
    NEGATION          shift, and go to state 32
    OPEN_PARENTHESIS  shift, and go to state 33

    location    go to state 34
    expression  go to state 51


State 44

   28 expression: expression ARITHMETIC_OP . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 28
    CHAR_LITERAL      shift, and go to state 29
    DECIMAL_LITERAL   shift, and go to state 30
    OP_MINUS          shift, and go to state 31
    NEGATION          shift, and go to state 32
    OPEN_PARENTHESIS  shift, and go to state 33

    location    go to state 34
    expression  go to state 52


State 45

   26 expression: expression OP_MINUS . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 28
    CHAR_LITERAL      shift, and go to state 29
    DECIMAL_LITERAL   shift, and go to state 30
    OP_MINUS          shift, and go to state 31
    NEGATION          shift, and go to state 32
    OPEN_PARENTHESIS  shift, and go to state 33

    location    go to state 34
    expression  go to state 53


State 46

   15 location: IDENTIFIER OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 15 (location)


State 47

   13 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL OPEN_SQUARE_BRACKET . callout_arguments CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMI_COLON

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 28
    STRING_LITERAL    shift, and go to state 54
    CHAR_LITERAL      shift, and go to state 29
    DECIMAL_LITERAL   shift, and go to state 30
    OP_MINUS          shift, and go to state 31
    NEGATION          shift, and go to state 32
    OPEN_PARENTHESIS  shift, and go to state 33

    location           go to state 34
    callout_arguments  go to state 55
    c_arg              go to state 56
    expression         go to state 57


State 48

   12 statement: location ASSIGNMENT_OP expression SEMI_COLON .

    $default  reduce using rule 12 (statement)


State 49

   30 expression: OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    $default  reduce using rule 30 (expression)


State 50

   26 expression: expression . OP_MINUS expression
   27           | expression . OP_PLUS expression
   27           | expression OP_PLUS expression .
   28           | expression . ARITHMETIC_OP expression
   29           | expression . RELATIONAL_OP expression

    ARITHMETIC_OP  shift, and go to state 44

    $default  reduce using rule 27 (expression)


State 51

   26 expression: expression . OP_MINUS expression
   27           | expression . OP_PLUS expression
   28           | expression . ARITHMETIC_OP expression
   29           | expression . RELATIONAL_OP expression
   29           | expression RELATIONAL_OP expression .

    OP_PLUS        shift, and go to state 42
    ARITHMETIC_OP  shift, and go to state 44
    OP_MINUS       shift, and go to state 45

    $default  reduce using rule 29 (expression)


State 52

   26 expression: expression . OP_MINUS expression
   27           | expression . OP_PLUS expression
   28           | expression . ARITHMETIC_OP expression
   28           | expression ARITHMETIC_OP expression .
   29           | expression . RELATIONAL_OP expression

    $default  reduce using rule 28 (expression)


State 53

   26 expression: expression . OP_MINUS expression
   26           | expression OP_MINUS expression .
   27           | expression . OP_PLUS expression
   28           | expression . ARITHMETIC_OP expression
   29           | expression . RELATIONAL_OP expression

    ARITHMETIC_OP  shift, and go to state 44

    $default  reduce using rule 26 (expression)


State 54

   19 c_arg: STRING_LITERAL .

    $default  reduce using rule 19 (c_arg)


State 55

   13 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL OPEN_SQUARE_BRACKET callout_arguments . CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMI_COLON
   16 callout_arguments: callout_arguments . COMMA c_arg

    COMMA                 shift, and go to state 58
    CLOSE_SQUARE_BRACKET  shift, and go to state 59


State 56

   17 callout_arguments: c_arg .

    $default  reduce using rule 17 (callout_arguments)


State 57

   18 c_arg: expression .
   26 expression: expression . OP_MINUS expression
   27           | expression . OP_PLUS expression
   28           | expression . ARITHMETIC_OP expression
   29           | expression . RELATIONAL_OP expression

    OP_PLUS        shift, and go to state 42
    RELATIONAL_OP  shift, and go to state 43
    ARITHMETIC_OP  shift, and go to state 44
    OP_MINUS       shift, and go to state 45

    $default  reduce using rule 18 (c_arg)


State 58

   16 callout_arguments: callout_arguments COMMA . c_arg

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 28
    STRING_LITERAL    shift, and go to state 54
    CHAR_LITERAL      shift, and go to state 29
    DECIMAL_LITERAL   shift, and go to state 30
    OP_MINUS          shift, and go to state 31
    NEGATION          shift, and go to state 32
    OPEN_PARENTHESIS  shift, and go to state 33

    location    go to state 34
    c_arg       go to state 60
    expression  go to state 57


State 59

   13 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL OPEN_SQUARE_BRACKET callout_arguments CLOSE_SQUARE_BRACKET . CLOSE_PARENTHESIS SEMI_COLON

    CLOSE_PARENTHESIS  shift, and go to state 61


State 60

   16 callout_arguments: callout_arguments COMMA c_arg .

    $default  reduce using rule 16 (callout_arguments)


State 61

   13 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL OPEN_SQUARE_BRACKET callout_arguments CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 62


State 62

   13 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL OPEN_SQUARE_BRACKET callout_arguments CLOSE_SQUARE_BRACKET CLOSE_PARENTHESIS SEMI_COLON .

    $default  reduce using rule 13 (statement)
