Terminals unused in grammar

   HEX_LITERAL
   ERROR
   EQUALITY_OP


Grammar

    0 $accept: program $end

    1 program: CLASS IDENTIFIER START_BLOCK body CLOSE_BLOCK
    2        | CLASS IDENTIFIER START_BLOCK CLOSE_BLOCK

    3 body: field statement_list
    4     | field
    5     | field method
    6     | field method statement_list

    7 field: field field_declaration
    8      | field_declaration

    9 field_declaration: TYPE id_list SEMI_COLON

   10 id_list: id_list COMMA id_decl
   11        | id_decl

   12 id_decl: IDENTIFIER
   13        | IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

   14 statement_list: statement_list statement
   15               | statement

   16 statement: location ASSIGNMENT_OP expression SEMI_COLON
   17          | CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON
   18          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block
   19          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE block
   20          | FOR IDENTIFIER '=' expression COMMA expression block
   21          | RETURN expression SEMI_COLON
   22          | BREAK SEMI_COLON
   23          | CONTINUE SEMI_COLON
   24          | block

   25 method: TYPE IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   26       | TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block
   27       | VOID IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   28       | VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

   29 method_argument_list: method_argument_list COMMA method_argument
   30                     | method_argument

   31 method_argument: TYPE IDENTIFIER

   32 block: START_BLOCK CLOSE_BLOCK
   33      | START_BLOCK field CLOSE_BLOCK
   34      | START_BLOCK field statement_list CLOSE_BLOCK
   35      | START_BLOCK statement_list CLOSE_BLOCK

   36 location: IDENTIFIER
   37         | IDENTIFIER OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET

   38 callout_arguments: callout_arguments COMMA c_arg
   39                  | c_arg

   40 c_arg: expression
   41      | STRING_LITERAL

   42 expression: location
   43           | DECIMAL_LITERAL
   44           | CHAR_LITERAL
   45           | BOOLEAN_LITERAL
   46           | NEGATION expression
   47           | OP_MINUS expression
   48           | expression OP_MINUS expression
   49           | expression OP_PLUS expression
   50           | expression ARITHMETIC_OP expression
   51           | expression RELATIONAL_OP expression
   52           | expression CONDITIONAL_OP expression
   53           | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS


Terminals, with rules where they appear

$end (0) 0
'=' (61) 20
error (256)
OP_PLUS (258) 49
IDENTIFIER (259) 1 2 12 13 20 25 26 27 28 31 36 37
TYPE (260) 9 25 26 31
BOOLEAN_LITERAL (261) 45
STRING_LITERAL (262) 17 41
CHAR_LITERAL (263) 44
HEX_LITERAL (264)
DECIMAL_LITERAL (265) 13 43
ERROR (266)
RELATIONAL_OP (267) 51
CONDITIONAL_OP (268) 52
ARITHMETIC_OP (269) 50
ASSIGNMENT_OP (270) 16
EQUALITY_OP (271)
OP_MINUS (272) 47 48
NEGATION (273) 46
CLASS (274) 1 2
SEMI_COLON (275) 9 16 17 21 22 23
COMMA (276) 10 17 20 29 38
CALLOUT (277) 17
IF (278) 18 19
ELSE (279) 19
FOR (280) 20
BREAK (281) 22
CONTINUE (282) 23
RETURN (283) 21
VOID (284) 27 28
START_BLOCK (285) 1 2 32 33 34 35
CLOSE_BLOCK (286) 1 2 32 33 34 35
OPEN_SQUARE_BRACKET (287) 13 37
CLOSE_SQUARE_BRACKET (288) 13 37
OPEN_PARENTHESIS (289) 17 18 19 25 26 27 28 53
CLOSE_PARENTHESIS (290) 17 18 19 25 26 27 28 53
UNARY_MINUS (291)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
body (40)
    on left: 3 4 5 6, on right: 1
field (41)
    on left: 7 8, on right: 3 4 5 6 7 33 34
field_declaration (42)
    on left: 9, on right: 7 8
id_list (43)
    on left: 10 11, on right: 9 10
id_decl (44)
    on left: 12 13, on right: 10 11
statement_list (45)
    on left: 14 15, on right: 3 6 14 34 35
statement (46)
    on left: 16 17 18 19 20 21 22 23 24, on right: 14 15
method (47)
    on left: 25 26 27 28, on right: 5 6
method_argument_list (48)
    on left: 29 30, on right: 26 28 29
method_argument (49)
    on left: 31, on right: 29 30
block (50)
    on left: 32 33 34 35, on right: 18 19 20 24 25 26 27 28
location (51)
    on left: 36 37, on right: 16 42
callout_arguments (52)
    on left: 38 39, on right: 17 38
c_arg (53)
    on left: 40 41, on right: 38 39
expression (54)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53, on right: 16 18 19
    20 21 37 40 46 47 48 49 50 51 52 53


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . IDENTIFIER START_BLOCK body CLOSE_BLOCK
    2        | CLASS . IDENTIFIER START_BLOCK CLOSE_BLOCK

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS IDENTIFIER . START_BLOCK body CLOSE_BLOCK
    2        | CLASS IDENTIFIER . START_BLOCK CLOSE_BLOCK

    START_BLOCK  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS IDENTIFIER START_BLOCK . body CLOSE_BLOCK
    2        | CLASS IDENTIFIER START_BLOCK . CLOSE_BLOCK

    TYPE         shift, and go to state 6
    CLOSE_BLOCK  shift, and go to state 7

    body               go to state 8
    field              go to state 9
    field_declaration  go to state 10


State 6

    9 field_declaration: TYPE . id_list SEMI_COLON

    IDENTIFIER  shift, and go to state 11

    id_list  go to state 12
    id_decl  go to state 13


State 7

    2 program: CLASS IDENTIFIER START_BLOCK CLOSE_BLOCK .

    $default  reduce using rule 2 (program)


State 8

    1 program: CLASS IDENTIFIER START_BLOCK body . CLOSE_BLOCK

    CLOSE_BLOCK  shift, and go to state 14


State 9

    3 body: field . statement_list
    4     | field .
    5     | field . method
    6     | field . method statement_list
    7 field: field . field_declaration

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 16
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    VOID         shift, and go to state 23
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 4 (body)

    field_declaration  go to state 25
    statement_list     go to state 26
    statement          go to state 27
    method             go to state 28
    block              go to state 29
    location           go to state 30


State 10

    8 field: field_declaration .

    $default  reduce using rule 8 (field)


State 11

   12 id_decl: IDENTIFIER .
   13        | IDENTIFIER . OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 31

    $default  reduce using rule 12 (id_decl)


State 12

    9 field_declaration: TYPE id_list . SEMI_COLON
   10 id_list: id_list . COMMA id_decl

    SEMI_COLON  shift, and go to state 32
    COMMA       shift, and go to state 33


State 13

   11 id_list: id_decl .

    $default  reduce using rule 11 (id_list)


State 14

    1 program: CLASS IDENTIFIER START_BLOCK body CLOSE_BLOCK .

    $default  reduce using rule 1 (program)


State 15

   36 location: IDENTIFIER .
   37         | IDENTIFIER . OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 34

    $default  reduce using rule 36 (location)


State 16

    9 field_declaration: TYPE . id_list SEMI_COLON
   25 method: TYPE . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   26       | TYPE . IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    IDENTIFIER  shift, and go to state 35

    id_list  go to state 12
    id_decl  go to state 13


State 17

   17 statement: CALLOUT . OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    OPEN_PARENTHESIS  shift, and go to state 36


State 18

   18 statement: IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block
   19          | IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE block

    OPEN_PARENTHESIS  shift, and go to state 37


State 19

   20 statement: FOR . IDENTIFIER '=' expression COMMA expression block

    IDENTIFIER  shift, and go to state 38


State 20

   22 statement: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 39


State 21

   23 statement: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 40


State 22

   21 statement: RETURN . expression SEMI_COLON

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 48


State 23

   27 method: VOID . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   28       | VOID . IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    IDENTIFIER  shift, and go to state 49


State 24

   32 block: START_BLOCK . CLOSE_BLOCK
   33      | START_BLOCK . field CLOSE_BLOCK
   34      | START_BLOCK . field statement_list CLOSE_BLOCK
   35      | START_BLOCK . statement_list CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 6
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 50

    field              go to state 51
    field_declaration  go to state 10
    statement_list     go to state 52
    statement          go to state 27
    block              go to state 29
    location           go to state 30


State 25

    7 field: field field_declaration .

    $default  reduce using rule 7 (field)


State 26

    3 body: field statement_list .
   14 statement_list: statement_list . statement

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 3 (body)

    statement  go to state 53
    block      go to state 29
    location   go to state 30


State 27

   15 statement_list: statement .

    $default  reduce using rule 15 (statement_list)


State 28

    5 body: field method .
    6     | field method . statement_list

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 5 (body)

    statement_list  go to state 54
    statement       go to state 27
    block           go to state 29
    location        go to state 30


State 29

   24 statement: block .

    $default  reduce using rule 24 (statement)


State 30

   16 statement: location . ASSIGNMENT_OP expression SEMI_COLON

    ASSIGNMENT_OP  shift, and go to state 55


State 31

   13 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET . DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

    DECIMAL_LITERAL  shift, and go to state 56


State 32

    9 field_declaration: TYPE id_list SEMI_COLON .

    $default  reduce using rule 9 (field_declaration)


State 33

   10 id_list: id_list COMMA . id_decl

    IDENTIFIER  shift, and go to state 11

    id_decl  go to state 57


State 34

   37 location: IDENTIFIER OPEN_SQUARE_BRACKET . expression CLOSE_SQUARE_BRACKET

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 58


State 35

   12 id_decl: IDENTIFIER .
   13        | IDENTIFIER . OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET
   25 method: TYPE IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   26       | TYPE IDENTIFIER . OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    OPEN_SQUARE_BRACKET  shift, and go to state 31
    OPEN_PARENTHESIS     shift, and go to state 59

    $default  reduce using rule 12 (id_decl)


State 36

   17 statement: CALLOUT OPEN_PARENTHESIS . STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    STRING_LITERAL  shift, and go to state 60


State 37

   18 statement: IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS block
   19          | IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS block ELSE block

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 61


State 38

   20 statement: FOR IDENTIFIER . '=' expression COMMA expression block

    '='  shift, and go to state 62


State 39

   22 statement: BREAK SEMI_COLON .

    $default  reduce using rule 22 (statement)


State 40

   23 statement: CONTINUE SEMI_COLON .

    $default  reduce using rule 23 (statement)


State 41

   45 expression: BOOLEAN_LITERAL .

    $default  reduce using rule 45 (expression)


State 42

   44 expression: CHAR_LITERAL .

    $default  reduce using rule 44 (expression)


State 43

   43 expression: DECIMAL_LITERAL .

    $default  reduce using rule 43 (expression)


State 44

   47 expression: OP_MINUS . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 63


State 45

   46 expression: NEGATION . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 64


State 46

   53 expression: OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 65


State 47

   42 expression: location .

    $default  reduce using rule 42 (expression)


State 48

   21 statement: RETURN expression . SEMI_COLON
   48 expression: expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 66
    RELATIONAL_OP   shift, and go to state 67
    CONDITIONAL_OP  shift, and go to state 68
    ARITHMETIC_OP   shift, and go to state 69
    OP_MINUS        shift, and go to state 70
    SEMI_COLON      shift, and go to state 71


State 49

   27 method: VOID IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   28       | VOID IDENTIFIER . OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    OPEN_PARENTHESIS  shift, and go to state 72


State 50

   32 block: START_BLOCK CLOSE_BLOCK .

    $default  reduce using rule 32 (block)


State 51

    7 field: field . field_declaration
   33 block: START_BLOCK field . CLOSE_BLOCK
   34      | START_BLOCK field . statement_list CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 6
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 73

    field_declaration  go to state 25
    statement_list     go to state 74
    statement          go to state 27
    block              go to state 29
    location           go to state 30


State 52

   14 statement_list: statement_list . statement
   35 block: START_BLOCK statement_list . CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 75

    statement  go to state 53
    block      go to state 29
    location   go to state 30


State 53

   14 statement_list: statement_list statement .

    $default  reduce using rule 14 (statement_list)


State 54

    6 body: field method statement_list .
   14 statement_list: statement_list . statement

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 6 (body)

    statement  go to state 53
    block      go to state 29
    location   go to state 30


State 55

   16 statement: location ASSIGNMENT_OP . expression SEMI_COLON

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 76


State 56

   13 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET  shift, and go to state 77


State 57

   10 id_list: id_list COMMA id_decl .

    $default  reduce using rule 10 (id_list)


State 58

   37 location: IDENTIFIER OPEN_SQUARE_BRACKET expression . CLOSE_SQUARE_BRACKET
   48 expression: expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression

    OP_PLUS               shift, and go to state 66
    RELATIONAL_OP         shift, and go to state 67
    CONDITIONAL_OP        shift, and go to state 68
    ARITHMETIC_OP         shift, and go to state 69
    OP_MINUS              shift, and go to state 70
    CLOSE_SQUARE_BRACKET  shift, and go to state 78


State 59

   25 method: TYPE IDENTIFIER OPEN_PARENTHESIS . CLOSE_PARENTHESIS block
   26       | TYPE IDENTIFIER OPEN_PARENTHESIS . method_argument_list CLOSE_PARENTHESIS block

    TYPE               shift, and go to state 79
    CLOSE_PARENTHESIS  shift, and go to state 80

    method_argument_list  go to state 81
    method_argument       go to state 82


State 60

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL . COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    COMMA  shift, and go to state 83


State 61

   18 statement: IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS block
   19          | IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS block ELSE block
   48 expression: expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression

    OP_PLUS            shift, and go to state 66
    RELATIONAL_OP      shift, and go to state 67
    CONDITIONAL_OP     shift, and go to state 68
    ARITHMETIC_OP      shift, and go to state 69
    OP_MINUS           shift, and go to state 70
    CLOSE_PARENTHESIS  shift, and go to state 84


State 62

   20 statement: FOR IDENTIFIER '=' . expression COMMA expression block

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 85


State 63

   47 expression: OP_MINUS expression .
   48           | expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression

    $default  reduce using rule 47 (expression)


State 64

   46 expression: NEGATION expression .
   48           | expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression

    $default  reduce using rule 46 (expression)


State 65

   48 expression: expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression
   53           | OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS

    OP_PLUS            shift, and go to state 66
    RELATIONAL_OP      shift, and go to state 67
    CONDITIONAL_OP     shift, and go to state 68
    ARITHMETIC_OP      shift, and go to state 69
    OP_MINUS           shift, and go to state 70
    CLOSE_PARENTHESIS  shift, and go to state 86


State 66

   49 expression: expression OP_PLUS . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 87


State 67

   51 expression: expression RELATIONAL_OP . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 88


State 68

   52 expression: expression CONDITIONAL_OP . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 89


State 69

   50 expression: expression ARITHMETIC_OP . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 90


State 70

   48 expression: expression OP_MINUS . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 91


State 71

   21 statement: RETURN expression SEMI_COLON .

    $default  reduce using rule 21 (statement)


State 72

   27 method: VOID IDENTIFIER OPEN_PARENTHESIS . CLOSE_PARENTHESIS block
   28       | VOID IDENTIFIER OPEN_PARENTHESIS . method_argument_list CLOSE_PARENTHESIS block

    TYPE               shift, and go to state 79
    CLOSE_PARENTHESIS  shift, and go to state 92

    method_argument_list  go to state 93
    method_argument       go to state 82


State 73

   33 block: START_BLOCK field CLOSE_BLOCK .

    $default  reduce using rule 33 (block)


State 74

   14 statement_list: statement_list . statement
   34 block: START_BLOCK field statement_list . CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 94

    statement  go to state 53
    block      go to state 29
    location   go to state 30


State 75

   35 block: START_BLOCK statement_list CLOSE_BLOCK .

    $default  reduce using rule 35 (block)


State 76

   16 statement: location ASSIGNMENT_OP expression . SEMI_COLON
   48 expression: expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 66
    RELATIONAL_OP   shift, and go to state 67
    CONDITIONAL_OP  shift, and go to state 68
    ARITHMETIC_OP   shift, and go to state 69
    OP_MINUS        shift, and go to state 70
    SEMI_COLON      shift, and go to state 95


State 77

   13 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 13 (id_decl)


State 78

   37 location: IDENTIFIER OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 37 (location)


State 79

   31 method_argument: TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 96


State 80

   25 method: TYPE IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 97


State 81

   26 method: TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list . CLOSE_PARENTHESIS block
   29 method_argument_list: method_argument_list . COMMA method_argument

    COMMA              shift, and go to state 98
    CLOSE_PARENTHESIS  shift, and go to state 99


State 82

   30 method_argument_list: method_argument .

    $default  reduce using rule 30 (method_argument_list)


State 83

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA . callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    STRING_LITERAL    shift, and go to state 100
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location           go to state 47
    callout_arguments  go to state 101
    c_arg              go to state 102
    expression         go to state 103


State 84

   18 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . block
   19          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . block ELSE block

    START_BLOCK  shift, and go to state 24

    block  go to state 104


State 85

   20 statement: FOR IDENTIFIER '=' expression . COMMA expression block
   48 expression: expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 66
    RELATIONAL_OP   shift, and go to state 67
    CONDITIONAL_OP  shift, and go to state 68
    ARITHMETIC_OP   shift, and go to state 69
    OP_MINUS        shift, and go to state 70
    COMMA           shift, and go to state 105


State 86

   53 expression: OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    $default  reduce using rule 53 (expression)


State 87

   48 expression: expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   49           | expression OP_PLUS expression .
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression

    ARITHMETIC_OP  shift, and go to state 69

    $default  reduce using rule 49 (expression)


State 88

   48 expression: expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   51           | expression RELATIONAL_OP expression .
   52           | expression . CONDITIONAL_OP expression

    OP_PLUS        shift, and go to state 66
    ARITHMETIC_OP  shift, and go to state 69
    OP_MINUS       shift, and go to state 70

    $default  reduce using rule 51 (expression)


State 89

   48 expression: expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression
   52           | expression CONDITIONAL_OP expression .

    OP_PLUS        shift, and go to state 66
    ARITHMETIC_OP  shift, and go to state 69
    OP_MINUS       shift, and go to state 70

    $default  reduce using rule 52 (expression)


State 90

   48 expression: expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   50           | expression ARITHMETIC_OP expression .
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression

    $default  reduce using rule 50 (expression)


State 91

   48 expression: expression . OP_MINUS expression
   48           | expression OP_MINUS expression .
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression

    ARITHMETIC_OP  shift, and go to state 69

    $default  reduce using rule 48 (expression)


State 92

   27 method: VOID IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 106


State 93

   28 method: VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list . CLOSE_PARENTHESIS block
   29 method_argument_list: method_argument_list . COMMA method_argument

    COMMA              shift, and go to state 98
    CLOSE_PARENTHESIS  shift, and go to state 107


State 94

   34 block: START_BLOCK field statement_list CLOSE_BLOCK .

    $default  reduce using rule 34 (block)


State 95

   16 statement: location ASSIGNMENT_OP expression SEMI_COLON .

    $default  reduce using rule 16 (statement)


State 96

   31 method_argument: TYPE IDENTIFIER .

    $default  reduce using rule 31 (method_argument)


State 97

   25 method: TYPE IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block .

    $default  reduce using rule 25 (method)


State 98

   29 method_argument_list: method_argument_list COMMA . method_argument

    TYPE  shift, and go to state 79

    method_argument  go to state 108


State 99

   26 method: TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 109


State 100

   41 c_arg: STRING_LITERAL .

    $default  reduce using rule 41 (c_arg)


State 101

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments . CLOSE_PARENTHESIS SEMI_COLON
   38 callout_arguments: callout_arguments . COMMA c_arg

    COMMA              shift, and go to state 110
    CLOSE_PARENTHESIS  shift, and go to state 111


State 102

   39 callout_arguments: c_arg .

    $default  reduce using rule 39 (callout_arguments)


State 103

   40 c_arg: expression .
   48 expression: expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 66
    RELATIONAL_OP   shift, and go to state 67
    CONDITIONAL_OP  shift, and go to state 68
    ARITHMETIC_OP   shift, and go to state 69
    OP_MINUS        shift, and go to state 70

    $default  reduce using rule 40 (c_arg)


State 104

   18 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block .
   19          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block . ELSE block

    ELSE  shift, and go to state 112

    $default  reduce using rule 18 (statement)


State 105

   20 statement: FOR IDENTIFIER '=' expression COMMA . expression block

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    expression  go to state 113


State 106

   27 method: VOID IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block .

    $default  reduce using rule 27 (method)


State 107

   28 method: VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 114


State 108

   29 method_argument_list: method_argument_list COMMA method_argument .

    $default  reduce using rule 29 (method_argument_list)


State 109

   26 method: TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block .

    $default  reduce using rule 26 (method)


State 110

   38 callout_arguments: callout_arguments COMMA . c_arg

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 41
    STRING_LITERAL    shift, and go to state 100
    CHAR_LITERAL      shift, and go to state 42
    DECIMAL_LITERAL   shift, and go to state 43
    OP_MINUS          shift, and go to state 44
    NEGATION          shift, and go to state 45
    OPEN_PARENTHESIS  shift, and go to state 46

    location    go to state 47
    c_arg       go to state 115
    expression  go to state 103


State 111

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 116


State 112

   19 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE . block

    START_BLOCK  shift, and go to state 24

    block  go to state 117


State 113

   20 statement: FOR IDENTIFIER '=' expression COMMA expression . block
   48 expression: expression . OP_MINUS expression
   49           | expression . OP_PLUS expression
   50           | expression . ARITHMETIC_OP expression
   51           | expression . RELATIONAL_OP expression
   52           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 66
    RELATIONAL_OP   shift, and go to state 67
    CONDITIONAL_OP  shift, and go to state 68
    ARITHMETIC_OP   shift, and go to state 69
    OP_MINUS        shift, and go to state 70
    START_BLOCK     shift, and go to state 24

    block  go to state 118


State 114

   28 method: VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block .

    $default  reduce using rule 28 (method)


State 115

   38 callout_arguments: callout_arguments COMMA c_arg .

    $default  reduce using rule 38 (callout_arguments)


State 116

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON .

    $default  reduce using rule 17 (statement)


State 117

   19 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE block .

    $default  reduce using rule 19 (statement)


State 118

   20 statement: FOR IDENTIFIER '=' expression COMMA expression block .

    $default  reduce using rule 20 (statement)
