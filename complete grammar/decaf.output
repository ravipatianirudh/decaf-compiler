Terminals unused in grammar

   HEX_LITERAL
   ERROR
   EQUALITY_OP


Grammar

    0 $accept: program $end

    1 program: CLASS IDENTIFIER START_BLOCK body CLOSE_BLOCK
    2        | CLASS IDENTIFIER START_BLOCK CLOSE_BLOCK

    3 body: field statement_list
    4     | field
    5     | field method_list
    6     | field method_list statement_list

    7 method_list: method_list method
    8            | method

    9 field: field field_declaration
   10      | field_declaration

   11 field_declaration: TYPE id_list SEMI_COLON

   12 id_list: id_list COMMA id_decl
   13        | id_decl

   14 id_decl: IDENTIFIER
   15        | IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

   16 statement_list: statement_list statement
   17               | statement

   18 statement: location ASSIGNMENT_OP expression SEMI_COLON
   19          | CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON
   20          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block
   21          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE block
   22          | FOR IDENTIFIER ASSIGNMENT_OP expression COMMA expression block
   23          | RETURN expression SEMI_COLON
   24          | BREAK SEMI_COLON
   25          | CONTINUE SEMI_COLON
   26          | block
   27          | method_call SEMI_COLON
   28          | RETURN SEMI_COLON

   29 method_call: IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS
   30            | IDENTIFIER OPEN_PARENTHESIS expression_list CLOSE_PARENTHESIS

   31 method: TYPE IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   32       | TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block
   33       | VOID IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   34       | VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

   35 method_argument_list: method_argument_list COMMA method_argument
   36                     | method_argument

   37 method_argument: TYPE IDENTIFIER

   38 block: START_BLOCK CLOSE_BLOCK
   39      | START_BLOCK field CLOSE_BLOCK
   40      | START_BLOCK field statement_list CLOSE_BLOCK
   41      | START_BLOCK statement_list CLOSE_BLOCK

   42 location: IDENTIFIER
   43         | IDENTIFIER OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET

   44 callout_arguments: callout_arguments COMMA c_arg
   45                  | c_arg

   46 c_arg: expression
   47      | STRING_LITERAL

   48 expression_list: expression_list COMMA expression
   49                | expression

   50 expression: location
   51           | DECIMAL_LITERAL
   52           | CHAR_LITERAL
   53           | BOOLEAN_LITERAL
   54           | NEGATION expression
   55           | OP_MINUS expression
   56           | expression OP_MINUS expression
   57           | expression OP_PLUS expression
   58           | expression ARITHMETIC_OP expression
   59           | expression RELATIONAL_OP expression
   60           | expression CONDITIONAL_OP expression
   61           | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
   62           | method_call


Terminals, with rules where they appear

$end (0) 0
error (256)
OP_PLUS (258) 57
IDENTIFIER (259) 1 2 14 15 22 29 30 31 32 33 34 37 42 43
TYPE (260) 11 31 32 37
BOOLEAN_LITERAL (261) 53
STRING_LITERAL (262) 19 47
CHAR_LITERAL (263) 52
HEX_LITERAL (264)
DECIMAL_LITERAL (265) 15 51
ERROR (266)
RELATIONAL_OP (267) 59
CONDITIONAL_OP (268) 60
ARITHMETIC_OP (269) 58
ASSIGNMENT_OP (270) 18 22
EQUALITY_OP (271)
OP_MINUS (272) 55 56
NEGATION (273) 54
CLASS (274) 1 2
SEMI_COLON (275) 11 18 19 23 24 25 27 28
COMMA (276) 12 19 22 35 44 48
CALLOUT (277) 19
IF (278) 20 21
ELSE (279) 21
FOR (280) 22
BREAK (281) 24
CONTINUE (282) 25
RETURN (283) 23 28
VOID (284) 33 34
START_BLOCK (285) 1 2 38 39 40 41
CLOSE_BLOCK (286) 1 2 38 39 40 41
OPEN_SQUARE_BRACKET (287) 15 43
CLOSE_SQUARE_BRACKET (288) 15 43
OPEN_PARENTHESIS (289) 19 20 21 29 30 31 32 33 34 61
CLOSE_PARENTHESIS (290) 19 20 21 29 30 31 32 33 34 61
UNARY_MINUS (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1 2, on right: 0
body (39)
    on left: 3 4 5 6, on right: 1
method_list (40)
    on left: 7 8, on right: 5 6 7
field (41)
    on left: 9 10, on right: 3 4 5 6 9 39 40
field_declaration (42)
    on left: 11, on right: 9 10
id_list (43)
    on left: 12 13, on right: 11 12
id_decl (44)
    on left: 14 15, on right: 12 13
statement_list (45)
    on left: 16 17, on right: 3 6 16 40 41
statement (46)
    on left: 18 19 20 21 22 23 24 25 26 27 28, on right: 16 17
method_call (47)
    on left: 29 30, on right: 27 62
method (48)
    on left: 31 32 33 34, on right: 7 8
method_argument_list (49)
    on left: 35 36, on right: 32 34 35
method_argument (50)
    on left: 37, on right: 35 36
block (51)
    on left: 38 39 40 41, on right: 20 21 22 26 31 32 33 34
location (52)
    on left: 42 43, on right: 18 50
callout_arguments (53)
    on left: 44 45, on right: 19 44
c_arg (54)
    on left: 46 47, on right: 44 45
expression_list (55)
    on left: 48 49, on right: 30 48
expression (56)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62, on right: 18 20
    21 22 23 43 46 48 49 54 55 56 57 58 59 60 61


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . IDENTIFIER START_BLOCK body CLOSE_BLOCK
    2        | CLASS . IDENTIFIER START_BLOCK CLOSE_BLOCK

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS IDENTIFIER . START_BLOCK body CLOSE_BLOCK
    2        | CLASS IDENTIFIER . START_BLOCK CLOSE_BLOCK

    START_BLOCK  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS IDENTIFIER START_BLOCK . body CLOSE_BLOCK
    2        | CLASS IDENTIFIER START_BLOCK . CLOSE_BLOCK

    TYPE         shift, and go to state 6
    CLOSE_BLOCK  shift, and go to state 7

    body               go to state 8
    field              go to state 9
    field_declaration  go to state 10


State 6

   11 field_declaration: TYPE . id_list SEMI_COLON

    IDENTIFIER  shift, and go to state 11

    id_list  go to state 12
    id_decl  go to state 13


State 7

    2 program: CLASS IDENTIFIER START_BLOCK CLOSE_BLOCK .

    $default  reduce using rule 2 (program)


State 8

    1 program: CLASS IDENTIFIER START_BLOCK body . CLOSE_BLOCK

    CLOSE_BLOCK  shift, and go to state 14


State 9

    3 body: field . statement_list
    4     | field .
    5     | field . method_list
    6     | field . method_list statement_list
    9 field: field . field_declaration

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 16
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    VOID         shift, and go to state 23
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 4 (body)

    method_list        go to state 25
    field_declaration  go to state 26
    statement_list     go to state 27
    statement          go to state 28
    method_call        go to state 29
    method             go to state 30
    block              go to state 31
    location           go to state 32


State 10

   10 field: field_declaration .

    $default  reduce using rule 10 (field)


State 11

   14 id_decl: IDENTIFIER .
   15        | IDENTIFIER . OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 33

    $default  reduce using rule 14 (id_decl)


State 12

   11 field_declaration: TYPE id_list . SEMI_COLON
   12 id_list: id_list . COMMA id_decl

    SEMI_COLON  shift, and go to state 34
    COMMA       shift, and go to state 35


State 13

   13 id_list: id_decl .

    $default  reduce using rule 13 (id_list)


State 14

    1 program: CLASS IDENTIFIER START_BLOCK body CLOSE_BLOCK .

    $default  reduce using rule 1 (program)


State 15

   29 method_call: IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS
   30            | IDENTIFIER . OPEN_PARENTHESIS expression_list CLOSE_PARENTHESIS
   42 location: IDENTIFIER .
   43         | IDENTIFIER . OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 36
    OPEN_PARENTHESIS     shift, and go to state 37

    $default  reduce using rule 42 (location)


State 16

   11 field_declaration: TYPE . id_list SEMI_COLON
   31 method: TYPE . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   32       | TYPE . IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    IDENTIFIER  shift, and go to state 38

    id_list  go to state 12
    id_decl  go to state 13


State 17

   19 statement: CALLOUT . OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    OPEN_PARENTHESIS  shift, and go to state 39


State 18

   20 statement: IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block
   21          | IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE block

    OPEN_PARENTHESIS  shift, and go to state 40


State 19

   22 statement: FOR . IDENTIFIER ASSIGNMENT_OP expression COMMA expression block

    IDENTIFIER  shift, and go to state 41


State 20

   24 statement: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 42


State 21

   25 statement: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 43


State 22

   23 statement: RETURN . expression SEMI_COLON
   28          | RETURN . SEMI_COLON

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    SEMI_COLON        shift, and go to state 49
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 53


State 23

   33 method: VOID . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   34       | VOID . IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    IDENTIFIER  shift, and go to state 54


State 24

   38 block: START_BLOCK . CLOSE_BLOCK
   39      | START_BLOCK . field CLOSE_BLOCK
   40      | START_BLOCK . field statement_list CLOSE_BLOCK
   41      | START_BLOCK . statement_list CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 6
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 55

    field              go to state 56
    field_declaration  go to state 10
    statement_list     go to state 57
    statement          go to state 28
    method_call        go to state 29
    block              go to state 31
    location           go to state 32


State 25

    5 body: field method_list .
    6     | field method_list . statement_list
    7 method_list: method_list . method

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 58
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    VOID         shift, and go to state 23
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 5 (body)

    statement_list  go to state 59
    statement       go to state 28
    method_call     go to state 29
    method          go to state 60
    block           go to state 31
    location        go to state 32


State 26

    9 field: field field_declaration .

    $default  reduce using rule 9 (field)


State 27

    3 body: field statement_list .
   16 statement_list: statement_list . statement

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 3 (body)

    statement    go to state 61
    method_call  go to state 29
    block        go to state 31
    location     go to state 32


State 28

   17 statement_list: statement .

    $default  reduce using rule 17 (statement_list)


State 29

   27 statement: method_call . SEMI_COLON

    SEMI_COLON  shift, and go to state 62


State 30

    8 method_list: method .

    $default  reduce using rule 8 (method_list)


State 31

   26 statement: block .

    $default  reduce using rule 26 (statement)


State 32

   18 statement: location . ASSIGNMENT_OP expression SEMI_COLON

    ASSIGNMENT_OP  shift, and go to state 63


State 33

   15 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET . DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

    DECIMAL_LITERAL  shift, and go to state 64


State 34

   11 field_declaration: TYPE id_list SEMI_COLON .

    $default  reduce using rule 11 (field_declaration)


State 35

   12 id_list: id_list COMMA . id_decl

    IDENTIFIER  shift, and go to state 11

    id_decl  go to state 65


State 36

   43 location: IDENTIFIER OPEN_SQUARE_BRACKET . expression CLOSE_SQUARE_BRACKET

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 66


State 37

   29 method_call: IDENTIFIER OPEN_PARENTHESIS . CLOSE_PARENTHESIS
   30            | IDENTIFIER OPEN_PARENTHESIS . expression_list CLOSE_PARENTHESIS

    IDENTIFIER         shift, and go to state 15
    BOOLEAN_LITERAL    shift, and go to state 44
    CHAR_LITERAL       shift, and go to state 45
    DECIMAL_LITERAL    shift, and go to state 46
    OP_MINUS           shift, and go to state 47
    NEGATION           shift, and go to state 48
    OPEN_PARENTHESIS   shift, and go to state 50
    CLOSE_PARENTHESIS  shift, and go to state 67

    method_call      go to state 51
    location         go to state 52
    expression_list  go to state 68
    expression       go to state 69


State 38

   14 id_decl: IDENTIFIER .
   15        | IDENTIFIER . OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET
   31 method: TYPE IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   32       | TYPE IDENTIFIER . OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    OPEN_SQUARE_BRACKET  shift, and go to state 33
    OPEN_PARENTHESIS     shift, and go to state 70

    $default  reduce using rule 14 (id_decl)


State 39

   19 statement: CALLOUT OPEN_PARENTHESIS . STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    STRING_LITERAL  shift, and go to state 71


State 40

   20 statement: IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS block
   21          | IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS block ELSE block

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 72


State 41

   22 statement: FOR IDENTIFIER . ASSIGNMENT_OP expression COMMA expression block

    ASSIGNMENT_OP  shift, and go to state 73


State 42

   24 statement: BREAK SEMI_COLON .

    $default  reduce using rule 24 (statement)


State 43

   25 statement: CONTINUE SEMI_COLON .

    $default  reduce using rule 25 (statement)


State 44

   53 expression: BOOLEAN_LITERAL .

    $default  reduce using rule 53 (expression)


State 45

   52 expression: CHAR_LITERAL .

    $default  reduce using rule 52 (expression)


State 46

   51 expression: DECIMAL_LITERAL .

    $default  reduce using rule 51 (expression)


State 47

   55 expression: OP_MINUS . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 74


State 48

   54 expression: NEGATION . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 75


State 49

   28 statement: RETURN SEMI_COLON .

    $default  reduce using rule 28 (statement)


State 50

   61 expression: OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 76


State 51

   62 expression: method_call .

    $default  reduce using rule 62 (expression)


State 52

   50 expression: location .

    $default  reduce using rule 50 (expression)


State 53

   23 statement: RETURN expression . SEMI_COLON
   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 77
    RELATIONAL_OP   shift, and go to state 78
    CONDITIONAL_OP  shift, and go to state 79
    ARITHMETIC_OP   shift, and go to state 80
    OP_MINUS        shift, and go to state 81
    SEMI_COLON      shift, and go to state 82


State 54

   33 method: VOID IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   34       | VOID IDENTIFIER . OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    OPEN_PARENTHESIS  shift, and go to state 83


State 55

   38 block: START_BLOCK CLOSE_BLOCK .

    $default  reduce using rule 38 (block)


State 56

    9 field: field . field_declaration
   39 block: START_BLOCK field . CLOSE_BLOCK
   40      | START_BLOCK field . statement_list CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 6
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 84

    field_declaration  go to state 26
    statement_list     go to state 85
    statement          go to state 28
    method_call        go to state 29
    block              go to state 31
    location           go to state 32


State 57

   16 statement_list: statement_list . statement
   41 block: START_BLOCK statement_list . CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 86

    statement    go to state 61
    method_call  go to state 29
    block        go to state 31
    location     go to state 32


State 58

   31 method: TYPE . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   32       | TYPE . IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    IDENTIFIER  shift, and go to state 87


State 59

    6 body: field method_list statement_list .
   16 statement_list: statement_list . statement

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 6 (body)

    statement    go to state 61
    method_call  go to state 29
    block        go to state 31
    location     go to state 32


State 60

    7 method_list: method_list method .

    $default  reduce using rule 7 (method_list)


State 61

   16 statement_list: statement_list statement .

    $default  reduce using rule 16 (statement_list)


State 62

   27 statement: method_call SEMI_COLON .

    $default  reduce using rule 27 (statement)


State 63

   18 statement: location ASSIGNMENT_OP . expression SEMI_COLON

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 88


State 64

   15 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET  shift, and go to state 89


State 65

   12 id_list: id_list COMMA id_decl .

    $default  reduce using rule 12 (id_list)


State 66

   43 location: IDENTIFIER OPEN_SQUARE_BRACKET expression . CLOSE_SQUARE_BRACKET
   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    OP_PLUS               shift, and go to state 77
    RELATIONAL_OP         shift, and go to state 78
    CONDITIONAL_OP        shift, and go to state 79
    ARITHMETIC_OP         shift, and go to state 80
    OP_MINUS              shift, and go to state 81
    CLOSE_SQUARE_BRACKET  shift, and go to state 90


State 67

   29 method_call: IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    $default  reduce using rule 29 (method_call)


State 68

   30 method_call: IDENTIFIER OPEN_PARENTHESIS expression_list . CLOSE_PARENTHESIS
   48 expression_list: expression_list . COMMA expression

    COMMA              shift, and go to state 91
    CLOSE_PARENTHESIS  shift, and go to state 92


State 69

   49 expression_list: expression .
   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 77
    RELATIONAL_OP   shift, and go to state 78
    CONDITIONAL_OP  shift, and go to state 79
    ARITHMETIC_OP   shift, and go to state 80
    OP_MINUS        shift, and go to state 81

    $default  reduce using rule 49 (expression_list)


State 70

   31 method: TYPE IDENTIFIER OPEN_PARENTHESIS . CLOSE_PARENTHESIS block
   32       | TYPE IDENTIFIER OPEN_PARENTHESIS . method_argument_list CLOSE_PARENTHESIS block

    TYPE               shift, and go to state 93
    CLOSE_PARENTHESIS  shift, and go to state 94

    method_argument_list  go to state 95
    method_argument       go to state 96


State 71

   19 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL . COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    COMMA  shift, and go to state 97


State 72

   20 statement: IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS block
   21          | IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS block ELSE block
   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    OP_PLUS            shift, and go to state 77
    RELATIONAL_OP      shift, and go to state 78
    CONDITIONAL_OP     shift, and go to state 79
    ARITHMETIC_OP      shift, and go to state 80
    OP_MINUS           shift, and go to state 81
    CLOSE_PARENTHESIS  shift, and go to state 98


State 73

   22 statement: FOR IDENTIFIER ASSIGNMENT_OP . expression COMMA expression block

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 99


State 74

   55 expression: OP_MINUS expression .
   56           | expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    $default  reduce using rule 55 (expression)


State 75

   54 expression: NEGATION expression .
   56           | expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    $default  reduce using rule 54 (expression)


State 76

   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression
   61           | OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS

    OP_PLUS            shift, and go to state 77
    RELATIONAL_OP      shift, and go to state 78
    CONDITIONAL_OP     shift, and go to state 79
    ARITHMETIC_OP      shift, and go to state 80
    OP_MINUS           shift, and go to state 81
    CLOSE_PARENTHESIS  shift, and go to state 100


State 77

   57 expression: expression OP_PLUS . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 101


State 78

   59 expression: expression RELATIONAL_OP . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 102


State 79

   60 expression: expression CONDITIONAL_OP . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 103


State 80

   58 expression: expression ARITHMETIC_OP . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 104


State 81

   56 expression: expression OP_MINUS . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 105


State 82

   23 statement: RETURN expression SEMI_COLON .

    $default  reduce using rule 23 (statement)


State 83

   33 method: VOID IDENTIFIER OPEN_PARENTHESIS . CLOSE_PARENTHESIS block
   34       | VOID IDENTIFIER OPEN_PARENTHESIS . method_argument_list CLOSE_PARENTHESIS block

    TYPE               shift, and go to state 93
    CLOSE_PARENTHESIS  shift, and go to state 106

    method_argument_list  go to state 107
    method_argument       go to state 96


State 84

   39 block: START_BLOCK field CLOSE_BLOCK .

    $default  reduce using rule 39 (block)


State 85

   16 statement_list: statement_list . statement
   40 block: START_BLOCK field statement_list . CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 108

    statement    go to state 61
    method_call  go to state 29
    block        go to state 31
    location     go to state 32


State 86

   41 block: START_BLOCK statement_list CLOSE_BLOCK .

    $default  reduce using rule 41 (block)


State 87

   31 method: TYPE IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   32       | TYPE IDENTIFIER . OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    OPEN_PARENTHESIS  shift, and go to state 70


State 88

   18 statement: location ASSIGNMENT_OP expression . SEMI_COLON
   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 77
    RELATIONAL_OP   shift, and go to state 78
    CONDITIONAL_OP  shift, and go to state 79
    ARITHMETIC_OP   shift, and go to state 80
    OP_MINUS        shift, and go to state 81
    SEMI_COLON      shift, and go to state 109


State 89

   15 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 15 (id_decl)


State 90

   43 location: IDENTIFIER OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 43 (location)


State 91

   48 expression_list: expression_list COMMA . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 110


State 92

   30 method_call: IDENTIFIER OPEN_PARENTHESIS expression_list CLOSE_PARENTHESIS .

    $default  reduce using rule 30 (method_call)


State 93

   37 method_argument: TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 111


State 94

   31 method: TYPE IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 112


State 95

   32 method: TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list . CLOSE_PARENTHESIS block
   35 method_argument_list: method_argument_list . COMMA method_argument

    COMMA              shift, and go to state 113
    CLOSE_PARENTHESIS  shift, and go to state 114


State 96

   36 method_argument_list: method_argument .

    $default  reduce using rule 36 (method_argument_list)


State 97

   19 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA . callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    STRING_LITERAL    shift, and go to state 115
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call        go to state 51
    location           go to state 52
    callout_arguments  go to state 116
    c_arg              go to state 117
    expression         go to state 118


State 98

   20 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . block
   21          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . block ELSE block

    START_BLOCK  shift, and go to state 24

    block  go to state 119


State 99

   22 statement: FOR IDENTIFIER ASSIGNMENT_OP expression . COMMA expression block
   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 77
    RELATIONAL_OP   shift, and go to state 78
    CONDITIONAL_OP  shift, and go to state 79
    ARITHMETIC_OP   shift, and go to state 80
    OP_MINUS        shift, and go to state 81
    COMMA           shift, and go to state 120


State 100

   61 expression: OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    $default  reduce using rule 61 (expression)


State 101

   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   57           | expression OP_PLUS expression .
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    ARITHMETIC_OP  shift, and go to state 80

    $default  reduce using rule 57 (expression)


State 102

   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   59           | expression RELATIONAL_OP expression .
   60           | expression . CONDITIONAL_OP expression

    OP_PLUS        shift, and go to state 77
    ARITHMETIC_OP  shift, and go to state 80
    OP_MINUS       shift, and go to state 81

    $default  reduce using rule 59 (expression)


State 103

   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression
   60           | expression CONDITIONAL_OP expression .

    OP_PLUS        shift, and go to state 77
    ARITHMETIC_OP  shift, and go to state 80
    OP_MINUS       shift, and go to state 81

    $default  reduce using rule 60 (expression)


State 104

   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   58           | expression ARITHMETIC_OP expression .
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    $default  reduce using rule 58 (expression)


State 105

   56 expression: expression . OP_MINUS expression
   56           | expression OP_MINUS expression .
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    ARITHMETIC_OP  shift, and go to state 80

    $default  reduce using rule 56 (expression)


State 106

   33 method: VOID IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 121


State 107

   34 method: VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list . CLOSE_PARENTHESIS block
   35 method_argument_list: method_argument_list . COMMA method_argument

    COMMA              shift, and go to state 113
    CLOSE_PARENTHESIS  shift, and go to state 122


State 108

   40 block: START_BLOCK field statement_list CLOSE_BLOCK .

    $default  reduce using rule 40 (block)


State 109

   18 statement: location ASSIGNMENT_OP expression SEMI_COLON .

    $default  reduce using rule 18 (statement)


State 110

   48 expression_list: expression_list COMMA expression .
   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 77
    RELATIONAL_OP   shift, and go to state 78
    CONDITIONAL_OP  shift, and go to state 79
    ARITHMETIC_OP   shift, and go to state 80
    OP_MINUS        shift, and go to state 81

    $default  reduce using rule 48 (expression_list)


State 111

   37 method_argument: TYPE IDENTIFIER .

    $default  reduce using rule 37 (method_argument)


State 112

   31 method: TYPE IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block .

    $default  reduce using rule 31 (method)


State 113

   35 method_argument_list: method_argument_list COMMA . method_argument

    TYPE  shift, and go to state 93

    method_argument  go to state 123


State 114

   32 method: TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 124


State 115

   47 c_arg: STRING_LITERAL .

    $default  reduce using rule 47 (c_arg)


State 116

   19 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments . CLOSE_PARENTHESIS SEMI_COLON
   44 callout_arguments: callout_arguments . COMMA c_arg

    COMMA              shift, and go to state 125
    CLOSE_PARENTHESIS  shift, and go to state 126


State 117

   45 callout_arguments: c_arg .

    $default  reduce using rule 45 (callout_arguments)


State 118

   46 c_arg: expression .
   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 77
    RELATIONAL_OP   shift, and go to state 78
    CONDITIONAL_OP  shift, and go to state 79
    ARITHMETIC_OP   shift, and go to state 80
    OP_MINUS        shift, and go to state 81

    $default  reduce using rule 46 (c_arg)


State 119

   20 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block .
   21          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block . ELSE block

    ELSE  shift, and go to state 127

    $default  reduce using rule 20 (statement)


State 120

   22 statement: FOR IDENTIFIER ASSIGNMENT_OP expression COMMA . expression block

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    expression   go to state 128


State 121

   33 method: VOID IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block .

    $default  reduce using rule 33 (method)


State 122

   34 method: VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 129


State 123

   35 method_argument_list: method_argument_list COMMA method_argument .

    $default  reduce using rule 35 (method_argument_list)


State 124

   32 method: TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block .

    $default  reduce using rule 32 (method)


State 125

   44 callout_arguments: callout_arguments COMMA . c_arg

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 44
    STRING_LITERAL    shift, and go to state 115
    CHAR_LITERAL      shift, and go to state 45
    DECIMAL_LITERAL   shift, and go to state 46
    OP_MINUS          shift, and go to state 47
    NEGATION          shift, and go to state 48
    OPEN_PARENTHESIS  shift, and go to state 50

    method_call  go to state 51
    location     go to state 52
    c_arg        go to state 130
    expression   go to state 118


State 126

   19 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 131


State 127

   21 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE . block

    START_BLOCK  shift, and go to state 24

    block  go to state 132


State 128

   22 statement: FOR IDENTIFIER ASSIGNMENT_OP expression COMMA expression . block
   56 expression: expression . OP_MINUS expression
   57           | expression . OP_PLUS expression
   58           | expression . ARITHMETIC_OP expression
   59           | expression . RELATIONAL_OP expression
   60           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 77
    RELATIONAL_OP   shift, and go to state 78
    CONDITIONAL_OP  shift, and go to state 79
    ARITHMETIC_OP   shift, and go to state 80
    OP_MINUS        shift, and go to state 81
    START_BLOCK     shift, and go to state 24

    block  go to state 133


State 129

   34 method: VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block .

    $default  reduce using rule 34 (method)


State 130

   44 callout_arguments: callout_arguments COMMA c_arg .

    $default  reduce using rule 44 (callout_arguments)


State 131

   19 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON .

    $default  reduce using rule 19 (statement)


State 132

   21 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE block .

    $default  reduce using rule 21 (statement)


State 133

   22 statement: FOR IDENTIFIER ASSIGNMENT_OP expression COMMA expression block .

    $default  reduce using rule 22 (statement)
