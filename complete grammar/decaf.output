Terminals unused in grammar

   HEX_LITERAL
   ERROR
   EQUALITY_OP


Grammar

    0 $accept: program $end

    1 program: CLASS IDENTIFIER START_BLOCK body CLOSE_BLOCK
    2        | CLASS IDENTIFIER START_BLOCK CLOSE_BLOCK

    3 body: field statement_list
    4     | field
    5     | field method
    6     | field method statement_list

    7 field: field field_declaration
    8      | field_declaration

    9 field_declaration: TYPE id_list SEMI_COLON

   10 id_list: id_list COMMA id_decl
   11        | id_decl

   12 id_decl: IDENTIFIER
   13        | IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

   14 statement_list: statement_list statement
   15               | statement

   16 statement: location ASSIGNMENT_OP expression SEMI_COLON
   17          | CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON
   18          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block
   19          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE block
   20          | FOR IDENTIFIER '=' expression COMMA expression block
   21          | RETURN expression SEMI_COLON
   22          | BREAK SEMI_COLON
   23          | CONTINUE SEMI_COLON
   24          | block
   25          | IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMI_COLON
   26          | IDENTIFIER OPEN_PARENTHESIS expression_list CLOSE_PARENTHESIS SEMI_COLON

   27 method: TYPE IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   28       | TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block
   29       | VOID IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   30       | VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

   31 method_argument_list: method_argument_list COMMA method_argument
   32                     | method_argument

   33 method_argument: TYPE IDENTIFIER

   34 block: START_BLOCK CLOSE_BLOCK
   35      | START_BLOCK field CLOSE_BLOCK
   36      | START_BLOCK field statement_list CLOSE_BLOCK
   37      | START_BLOCK statement_list CLOSE_BLOCK

   38 location: IDENTIFIER
   39         | IDENTIFIER OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET

   40 callout_arguments: callout_arguments COMMA c_arg
   41                  | c_arg

   42 c_arg: expression
   43      | STRING_LITERAL

   44 expression_list: expression_list COMMA expression
   45                | expression

   46 expression: location
   47           | DECIMAL_LITERAL
   48           | CHAR_LITERAL
   49           | BOOLEAN_LITERAL
   50           | NEGATION expression
   51           | OP_MINUS expression
   52           | expression OP_MINUS expression
   53           | expression OP_PLUS expression
   54           | expression ARITHMETIC_OP expression
   55           | expression RELATIONAL_OP expression
   56           | expression CONDITIONAL_OP expression
   57           | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS


Terminals, with rules where they appear

$end (0) 0
'=' (61) 20
error (256)
OP_PLUS (258) 53
IDENTIFIER (259) 1 2 12 13 20 25 26 27 28 29 30 33 38 39
TYPE (260) 9 27 28 33
BOOLEAN_LITERAL (261) 49
STRING_LITERAL (262) 17 43
CHAR_LITERAL (263) 48
HEX_LITERAL (264)
DECIMAL_LITERAL (265) 13 47
ERROR (266)
RELATIONAL_OP (267) 55
CONDITIONAL_OP (268) 56
ARITHMETIC_OP (269) 54
ASSIGNMENT_OP (270) 16
EQUALITY_OP (271)
OP_MINUS (272) 51 52
NEGATION (273) 50
CLASS (274) 1 2
SEMI_COLON (275) 9 16 17 21 22 23 25 26
COMMA (276) 10 17 20 31 40 44
CALLOUT (277) 17
IF (278) 18 19
ELSE (279) 19
FOR (280) 20
BREAK (281) 22
CONTINUE (282) 23
RETURN (283) 21
VOID (284) 29 30
START_BLOCK (285) 1 2 34 35 36 37
CLOSE_BLOCK (286) 1 2 34 35 36 37
OPEN_SQUARE_BRACKET (287) 13 39
CLOSE_SQUARE_BRACKET (288) 13 39
OPEN_PARENTHESIS (289) 17 18 19 25 26 27 28 29 30 57
CLOSE_PARENTHESIS (290) 17 18 19 25 26 27 28 29 30 57
UNARY_MINUS (291)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
body (40)
    on left: 3 4 5 6, on right: 1
field (41)
    on left: 7 8, on right: 3 4 5 6 7 35 36
field_declaration (42)
    on left: 9, on right: 7 8
id_list (43)
    on left: 10 11, on right: 9 10
id_decl (44)
    on left: 12 13, on right: 10 11
statement_list (45)
    on left: 14 15, on right: 3 6 14 36 37
statement (46)
    on left: 16 17 18 19 20 21 22 23 24 25 26, on right: 14 15
method (47)
    on left: 27 28 29 30, on right: 5 6
method_argument_list (48)
    on left: 31 32, on right: 28 30 31
method_argument (49)
    on left: 33, on right: 31 32
block (50)
    on left: 34 35 36 37, on right: 18 19 20 24 27 28 29 30
location (51)
    on left: 38 39, on right: 16 46
callout_arguments (52)
    on left: 40 41, on right: 17 40
c_arg (53)
    on left: 42 43, on right: 40 41
expression_list (54)
    on left: 44 45, on right: 26 44
expression (55)
    on left: 46 47 48 49 50 51 52 53 54 55 56 57, on right: 16 18 19
    20 21 39 42 44 45 50 51 52 53 54 55 56 57


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . IDENTIFIER START_BLOCK body CLOSE_BLOCK
    2        | CLASS . IDENTIFIER START_BLOCK CLOSE_BLOCK

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS IDENTIFIER . START_BLOCK body CLOSE_BLOCK
    2        | CLASS IDENTIFIER . START_BLOCK CLOSE_BLOCK

    START_BLOCK  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS IDENTIFIER START_BLOCK . body CLOSE_BLOCK
    2        | CLASS IDENTIFIER START_BLOCK . CLOSE_BLOCK

    TYPE         shift, and go to state 6
    CLOSE_BLOCK  shift, and go to state 7

    body               go to state 8
    field              go to state 9
    field_declaration  go to state 10


State 6

    9 field_declaration: TYPE . id_list SEMI_COLON

    IDENTIFIER  shift, and go to state 11

    id_list  go to state 12
    id_decl  go to state 13


State 7

    2 program: CLASS IDENTIFIER START_BLOCK CLOSE_BLOCK .

    $default  reduce using rule 2 (program)


State 8

    1 program: CLASS IDENTIFIER START_BLOCK body . CLOSE_BLOCK

    CLOSE_BLOCK  shift, and go to state 14


State 9

    3 body: field . statement_list
    4     | field .
    5     | field . method
    6     | field . method statement_list
    7 field: field . field_declaration

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 16
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    VOID         shift, and go to state 23
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 4 (body)

    field_declaration  go to state 25
    statement_list     go to state 26
    statement          go to state 27
    method             go to state 28
    block              go to state 29
    location           go to state 30


State 10

    8 field: field_declaration .

    $default  reduce using rule 8 (field)


State 11

   12 id_decl: IDENTIFIER .
   13        | IDENTIFIER . OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 31

    $default  reduce using rule 12 (id_decl)


State 12

    9 field_declaration: TYPE id_list . SEMI_COLON
   10 id_list: id_list . COMMA id_decl

    SEMI_COLON  shift, and go to state 32
    COMMA       shift, and go to state 33


State 13

   11 id_list: id_decl .

    $default  reduce using rule 11 (id_list)


State 14

    1 program: CLASS IDENTIFIER START_BLOCK body CLOSE_BLOCK .

    $default  reduce using rule 1 (program)


State 15

   25 statement: IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMI_COLON
   26          | IDENTIFIER . OPEN_PARENTHESIS expression_list CLOSE_PARENTHESIS SEMI_COLON
   38 location: IDENTIFIER .
   39         | IDENTIFIER . OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 34
    OPEN_PARENTHESIS     shift, and go to state 35

    $default  reduce using rule 38 (location)


State 16

    9 field_declaration: TYPE . id_list SEMI_COLON
   27 method: TYPE . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   28       | TYPE . IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    IDENTIFIER  shift, and go to state 36

    id_list  go to state 12
    id_decl  go to state 13


State 17

   17 statement: CALLOUT . OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    OPEN_PARENTHESIS  shift, and go to state 37


State 18

   18 statement: IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block
   19          | IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE block

    OPEN_PARENTHESIS  shift, and go to state 38


State 19

   20 statement: FOR . IDENTIFIER '=' expression COMMA expression block

    IDENTIFIER  shift, and go to state 39


State 20

   22 statement: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 40


State 21

   23 statement: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 41


State 22

   21 statement: RETURN . expression SEMI_COLON

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 50


State 23

   29 method: VOID . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   30       | VOID . IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    IDENTIFIER  shift, and go to state 51


State 24

   34 block: START_BLOCK . CLOSE_BLOCK
   35      | START_BLOCK . field CLOSE_BLOCK
   36      | START_BLOCK . field statement_list CLOSE_BLOCK
   37      | START_BLOCK . statement_list CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 6
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 52

    field              go to state 53
    field_declaration  go to state 10
    statement_list     go to state 54
    statement          go to state 27
    block              go to state 29
    location           go to state 30


State 25

    7 field: field field_declaration .

    $default  reduce using rule 7 (field)


State 26

    3 body: field statement_list .
   14 statement_list: statement_list . statement

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 3 (body)

    statement  go to state 55
    block      go to state 29
    location   go to state 30


State 27

   15 statement_list: statement .

    $default  reduce using rule 15 (statement_list)


State 28

    5 body: field method .
    6     | field method . statement_list

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 5 (body)

    statement_list  go to state 56
    statement       go to state 27
    block           go to state 29
    location        go to state 30


State 29

   24 statement: block .

    $default  reduce using rule 24 (statement)


State 30

   16 statement: location . ASSIGNMENT_OP expression SEMI_COLON

    ASSIGNMENT_OP  shift, and go to state 57


State 31

   13 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET . DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

    DECIMAL_LITERAL  shift, and go to state 58


State 32

    9 field_declaration: TYPE id_list SEMI_COLON .

    $default  reduce using rule 9 (field_declaration)


State 33

   10 id_list: id_list COMMA . id_decl

    IDENTIFIER  shift, and go to state 11

    id_decl  go to state 59


State 34

   39 location: IDENTIFIER OPEN_SQUARE_BRACKET . expression CLOSE_SQUARE_BRACKET

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 60


State 35

   25 statement: IDENTIFIER OPEN_PARENTHESIS . CLOSE_PARENTHESIS SEMI_COLON
   26          | IDENTIFIER OPEN_PARENTHESIS . expression_list CLOSE_PARENTHESIS SEMI_COLON

    IDENTIFIER         shift, and go to state 42
    BOOLEAN_LITERAL    shift, and go to state 43
    CHAR_LITERAL       shift, and go to state 44
    DECIMAL_LITERAL    shift, and go to state 45
    OP_MINUS           shift, and go to state 46
    NEGATION           shift, and go to state 47
    OPEN_PARENTHESIS   shift, and go to state 48
    CLOSE_PARENTHESIS  shift, and go to state 61

    location         go to state 49
    expression_list  go to state 62
    expression       go to state 63


State 36

   12 id_decl: IDENTIFIER .
   13        | IDENTIFIER . OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET
   27 method: TYPE IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   28       | TYPE IDENTIFIER . OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    OPEN_SQUARE_BRACKET  shift, and go to state 31
    OPEN_PARENTHESIS     shift, and go to state 64

    $default  reduce using rule 12 (id_decl)


State 37

   17 statement: CALLOUT OPEN_PARENTHESIS . STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    STRING_LITERAL  shift, and go to state 65


State 38

   18 statement: IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS block
   19          | IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS block ELSE block

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 66


State 39

   20 statement: FOR IDENTIFIER . '=' expression COMMA expression block

    '='  shift, and go to state 67


State 40

   22 statement: BREAK SEMI_COLON .

    $default  reduce using rule 22 (statement)


State 41

   23 statement: CONTINUE SEMI_COLON .

    $default  reduce using rule 23 (statement)


State 42

   38 location: IDENTIFIER .
   39         | IDENTIFIER . OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 34

    $default  reduce using rule 38 (location)


State 43

   49 expression: BOOLEAN_LITERAL .

    $default  reduce using rule 49 (expression)


State 44

   48 expression: CHAR_LITERAL .

    $default  reduce using rule 48 (expression)


State 45

   47 expression: DECIMAL_LITERAL .

    $default  reduce using rule 47 (expression)


State 46

   51 expression: OP_MINUS . expression

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 68


State 47

   50 expression: NEGATION . expression

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 69


State 48

   57 expression: OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 70


State 49

   46 expression: location .

    $default  reduce using rule 46 (expression)


State 50

   21 statement: RETURN expression . SEMI_COLON
   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 71
    RELATIONAL_OP   shift, and go to state 72
    CONDITIONAL_OP  shift, and go to state 73
    ARITHMETIC_OP   shift, and go to state 74
    OP_MINUS        shift, and go to state 75
    SEMI_COLON      shift, and go to state 76


State 51

   29 method: VOID IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   30       | VOID IDENTIFIER . OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    OPEN_PARENTHESIS  shift, and go to state 77


State 52

   34 block: START_BLOCK CLOSE_BLOCK .

    $default  reduce using rule 34 (block)


State 53

    7 field: field . field_declaration
   35 block: START_BLOCK field . CLOSE_BLOCK
   36      | START_BLOCK field . statement_list CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 6
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 78

    field_declaration  go to state 25
    statement_list     go to state 79
    statement          go to state 27
    block              go to state 29
    location           go to state 30


State 54

   14 statement_list: statement_list . statement
   37 block: START_BLOCK statement_list . CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 80

    statement  go to state 55
    block      go to state 29
    location   go to state 30


State 55

   14 statement_list: statement_list statement .

    $default  reduce using rule 14 (statement_list)


State 56

    6 body: field method statement_list .
   14 statement_list: statement_list . statement

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 6 (body)

    statement  go to state 55
    block      go to state 29
    location   go to state 30


State 57

   16 statement: location ASSIGNMENT_OP . expression SEMI_COLON

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 81


State 58

   13 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET  shift, and go to state 82


State 59

   10 id_list: id_list COMMA id_decl .

    $default  reduce using rule 10 (id_list)


State 60

   39 location: IDENTIFIER OPEN_SQUARE_BRACKET expression . CLOSE_SQUARE_BRACKET
   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    OP_PLUS               shift, and go to state 71
    RELATIONAL_OP         shift, and go to state 72
    CONDITIONAL_OP        shift, and go to state 73
    ARITHMETIC_OP         shift, and go to state 74
    OP_MINUS              shift, and go to state 75
    CLOSE_SQUARE_BRACKET  shift, and go to state 83


State 61

   25 statement: IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 84


State 62

   26 statement: IDENTIFIER OPEN_PARENTHESIS expression_list . CLOSE_PARENTHESIS SEMI_COLON
   44 expression_list: expression_list . COMMA expression

    COMMA              shift, and go to state 85
    CLOSE_PARENTHESIS  shift, and go to state 86


State 63

   45 expression_list: expression .
   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 71
    RELATIONAL_OP   shift, and go to state 72
    CONDITIONAL_OP  shift, and go to state 73
    ARITHMETIC_OP   shift, and go to state 74
    OP_MINUS        shift, and go to state 75

    $default  reduce using rule 45 (expression_list)


State 64

   27 method: TYPE IDENTIFIER OPEN_PARENTHESIS . CLOSE_PARENTHESIS block
   28       | TYPE IDENTIFIER OPEN_PARENTHESIS . method_argument_list CLOSE_PARENTHESIS block

    TYPE               shift, and go to state 87
    CLOSE_PARENTHESIS  shift, and go to state 88

    method_argument_list  go to state 89
    method_argument       go to state 90


State 65

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL . COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    COMMA  shift, and go to state 91


State 66

   18 statement: IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS block
   19          | IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS block ELSE block
   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    OP_PLUS            shift, and go to state 71
    RELATIONAL_OP      shift, and go to state 72
    CONDITIONAL_OP     shift, and go to state 73
    ARITHMETIC_OP      shift, and go to state 74
    OP_MINUS           shift, and go to state 75
    CLOSE_PARENTHESIS  shift, and go to state 92


State 67

   20 statement: FOR IDENTIFIER '=' . expression COMMA expression block

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 93


State 68

   51 expression: OP_MINUS expression .
   52           | expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    $default  reduce using rule 51 (expression)


State 69

   50 expression: NEGATION expression .
   52           | expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    $default  reduce using rule 50 (expression)


State 70

   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression
   57           | OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS

    OP_PLUS            shift, and go to state 71
    RELATIONAL_OP      shift, and go to state 72
    CONDITIONAL_OP     shift, and go to state 73
    ARITHMETIC_OP      shift, and go to state 74
    OP_MINUS           shift, and go to state 75
    CLOSE_PARENTHESIS  shift, and go to state 94


State 71

   53 expression: expression OP_PLUS . expression

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 95


State 72

   55 expression: expression RELATIONAL_OP . expression

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 96


State 73

   56 expression: expression CONDITIONAL_OP . expression

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 97


State 74

   54 expression: expression ARITHMETIC_OP . expression

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 98


State 75

   52 expression: expression OP_MINUS . expression

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 99


State 76

   21 statement: RETURN expression SEMI_COLON .

    $default  reduce using rule 21 (statement)


State 77

   29 method: VOID IDENTIFIER OPEN_PARENTHESIS . CLOSE_PARENTHESIS block
   30       | VOID IDENTIFIER OPEN_PARENTHESIS . method_argument_list CLOSE_PARENTHESIS block

    TYPE               shift, and go to state 87
    CLOSE_PARENTHESIS  shift, and go to state 100

    method_argument_list  go to state 101
    method_argument       go to state 90


State 78

   35 block: START_BLOCK field CLOSE_BLOCK .

    $default  reduce using rule 35 (block)


State 79

   14 statement_list: statement_list . statement
   36 block: START_BLOCK field statement_list . CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 102

    statement  go to state 55
    block      go to state 29
    location   go to state 30


State 80

   37 block: START_BLOCK statement_list CLOSE_BLOCK .

    $default  reduce using rule 37 (block)


State 81

   16 statement: location ASSIGNMENT_OP expression . SEMI_COLON
   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 71
    RELATIONAL_OP   shift, and go to state 72
    CONDITIONAL_OP  shift, and go to state 73
    ARITHMETIC_OP   shift, and go to state 74
    OP_MINUS        shift, and go to state 75
    SEMI_COLON      shift, and go to state 103


State 82

   13 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 13 (id_decl)


State 83

   39 location: IDENTIFIER OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 39 (location)


State 84

   25 statement: IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS SEMI_COLON .

    $default  reduce using rule 25 (statement)


State 85

   44 expression_list: expression_list COMMA . expression

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 104


State 86

   26 statement: IDENTIFIER OPEN_PARENTHESIS expression_list CLOSE_PARENTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 105


State 87

   33 method_argument: TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 106


State 88

   27 method: TYPE IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 107


State 89

   28 method: TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list . CLOSE_PARENTHESIS block
   31 method_argument_list: method_argument_list . COMMA method_argument

    COMMA              shift, and go to state 108
    CLOSE_PARENTHESIS  shift, and go to state 109


State 90

   32 method_argument_list: method_argument .

    $default  reduce using rule 32 (method_argument_list)


State 91

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA . callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    STRING_LITERAL    shift, and go to state 110
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location           go to state 49
    callout_arguments  go to state 111
    c_arg              go to state 112
    expression         go to state 113


State 92

   18 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . block
   19          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . block ELSE block

    START_BLOCK  shift, and go to state 24

    block  go to state 114


State 93

   20 statement: FOR IDENTIFIER '=' expression . COMMA expression block
   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 71
    RELATIONAL_OP   shift, and go to state 72
    CONDITIONAL_OP  shift, and go to state 73
    ARITHMETIC_OP   shift, and go to state 74
    OP_MINUS        shift, and go to state 75
    COMMA           shift, and go to state 115


State 94

   57 expression: OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    $default  reduce using rule 57 (expression)


State 95

   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   53           | expression OP_PLUS expression .
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    ARITHMETIC_OP  shift, and go to state 74

    $default  reduce using rule 53 (expression)


State 96

   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   55           | expression RELATIONAL_OP expression .
   56           | expression . CONDITIONAL_OP expression

    OP_PLUS        shift, and go to state 71
    ARITHMETIC_OP  shift, and go to state 74
    OP_MINUS       shift, and go to state 75

    $default  reduce using rule 55 (expression)


State 97

   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression
   56           | expression CONDITIONAL_OP expression .

    OP_PLUS        shift, and go to state 71
    ARITHMETIC_OP  shift, and go to state 74
    OP_MINUS       shift, and go to state 75

    $default  reduce using rule 56 (expression)


State 98

   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   54           | expression ARITHMETIC_OP expression .
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    $default  reduce using rule 54 (expression)


State 99

   52 expression: expression . OP_MINUS expression
   52           | expression OP_MINUS expression .
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    ARITHMETIC_OP  shift, and go to state 74

    $default  reduce using rule 52 (expression)


State 100

   29 method: VOID IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 116


State 101

   30 method: VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list . CLOSE_PARENTHESIS block
   31 method_argument_list: method_argument_list . COMMA method_argument

    COMMA              shift, and go to state 108
    CLOSE_PARENTHESIS  shift, and go to state 117


State 102

   36 block: START_BLOCK field statement_list CLOSE_BLOCK .

    $default  reduce using rule 36 (block)


State 103

   16 statement: location ASSIGNMENT_OP expression SEMI_COLON .

    $default  reduce using rule 16 (statement)


State 104

   44 expression_list: expression_list COMMA expression .
   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 71
    RELATIONAL_OP   shift, and go to state 72
    CONDITIONAL_OP  shift, and go to state 73
    ARITHMETIC_OP   shift, and go to state 74
    OP_MINUS        shift, and go to state 75

    $default  reduce using rule 44 (expression_list)


State 105

   26 statement: IDENTIFIER OPEN_PARENTHESIS expression_list CLOSE_PARENTHESIS SEMI_COLON .

    $default  reduce using rule 26 (statement)


State 106

   33 method_argument: TYPE IDENTIFIER .

    $default  reduce using rule 33 (method_argument)


State 107

   27 method: TYPE IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block .

    $default  reduce using rule 27 (method)


State 108

   31 method_argument_list: method_argument_list COMMA . method_argument

    TYPE  shift, and go to state 87

    method_argument  go to state 118


State 109

   28 method: TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 119


State 110

   43 c_arg: STRING_LITERAL .

    $default  reduce using rule 43 (c_arg)


State 111

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments . CLOSE_PARENTHESIS SEMI_COLON
   40 callout_arguments: callout_arguments . COMMA c_arg

    COMMA              shift, and go to state 120
    CLOSE_PARENTHESIS  shift, and go to state 121


State 112

   41 callout_arguments: c_arg .

    $default  reduce using rule 41 (callout_arguments)


State 113

   42 c_arg: expression .
   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 71
    RELATIONAL_OP   shift, and go to state 72
    CONDITIONAL_OP  shift, and go to state 73
    ARITHMETIC_OP   shift, and go to state 74
    OP_MINUS        shift, and go to state 75

    $default  reduce using rule 42 (c_arg)


State 114

   18 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block .
   19          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block . ELSE block

    ELSE  shift, and go to state 122

    $default  reduce using rule 18 (statement)


State 115

   20 statement: FOR IDENTIFIER '=' expression COMMA . expression block

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    expression  go to state 123


State 116

   29 method: VOID IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block .

    $default  reduce using rule 29 (method)


State 117

   30 method: VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 124


State 118

   31 method_argument_list: method_argument_list COMMA method_argument .

    $default  reduce using rule 31 (method_argument_list)


State 119

   28 method: TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block .

    $default  reduce using rule 28 (method)


State 120

   40 callout_arguments: callout_arguments COMMA . c_arg

    IDENTIFIER        shift, and go to state 42
    BOOLEAN_LITERAL   shift, and go to state 43
    STRING_LITERAL    shift, and go to state 110
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    location    go to state 49
    c_arg       go to state 125
    expression  go to state 113


State 121

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 126


State 122

   19 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE . block

    START_BLOCK  shift, and go to state 24

    block  go to state 127


State 123

   20 statement: FOR IDENTIFIER '=' expression COMMA expression . block
   52 expression: expression . OP_MINUS expression
   53           | expression . OP_PLUS expression
   54           | expression . ARITHMETIC_OP expression
   55           | expression . RELATIONAL_OP expression
   56           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 71
    RELATIONAL_OP   shift, and go to state 72
    CONDITIONAL_OP  shift, and go to state 73
    ARITHMETIC_OP   shift, and go to state 74
    OP_MINUS        shift, and go to state 75
    START_BLOCK     shift, and go to state 24

    block  go to state 128


State 124

   30 method: VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block .

    $default  reduce using rule 30 (method)


State 125

   40 callout_arguments: callout_arguments COMMA c_arg .

    $default  reduce using rule 40 (callout_arguments)


State 126

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON .

    $default  reduce using rule 17 (statement)


State 127

   19 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE block .

    $default  reduce using rule 19 (statement)


State 128

   20 statement: FOR IDENTIFIER '=' expression COMMA expression block .

    $default  reduce using rule 20 (statement)
