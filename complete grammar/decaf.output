Terminals unused in grammar

   HEX_LITERAL
   ERROR
   EQUALITY_OP


Grammar

    0 $accept: program $end

    1 program: CLASS IDENTIFIER START_BLOCK body CLOSE_BLOCK
    2        | CLASS IDENTIFIER START_BLOCK CLOSE_BLOCK

    3 body: field statement_list
    4     | field
    5     | field method
    6     | field method statement_list

    7 field: field field_declaration
    8      | field_declaration

    9 field_declaration: TYPE id_list SEMI_COLON

   10 id_list: id_list COMMA id_decl
   11        | id_decl

   12 id_decl: IDENTIFIER
   13        | IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

   14 statement_list: statement_list statement
   15               | statement

   16 statement: location ASSIGNMENT_OP expression SEMI_COLON
   17          | CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON
   18          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block
   19          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE block
   20          | FOR IDENTIFIER '=' expression COMMA expression block
   21          | RETURN expression SEMI_COLON
   22          | BREAK SEMI_COLON
   23          | CONTINUE SEMI_COLON
   24          | block
   25          | method_call SEMI_COLON

   26 method_call: IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS
   27            | IDENTIFIER OPEN_PARENTHESIS expression_list CLOSE_PARENTHESIS

   28 method: TYPE IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   29       | TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block
   30       | VOID IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   31       | VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

   32 method_argument_list: method_argument_list COMMA method_argument
   33                     | method_argument

   34 method_argument: TYPE IDENTIFIER

   35 block: START_BLOCK CLOSE_BLOCK
   36      | START_BLOCK field CLOSE_BLOCK
   37      | START_BLOCK field statement_list CLOSE_BLOCK
   38      | START_BLOCK statement_list CLOSE_BLOCK

   39 location: IDENTIFIER
   40         | IDENTIFIER OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET

   41 callout_arguments: callout_arguments COMMA c_arg
   42                  | c_arg

   43 c_arg: expression
   44      | STRING_LITERAL

   45 expression_list: expression_list COMMA expression
   46                | expression

   47 expression: location
   48           | DECIMAL_LITERAL
   49           | CHAR_LITERAL
   50           | BOOLEAN_LITERAL
   51           | NEGATION expression
   52           | OP_MINUS expression
   53           | expression OP_MINUS expression
   54           | expression OP_PLUS expression
   55           | expression ARITHMETIC_OP expression
   56           | expression RELATIONAL_OP expression
   57           | expression CONDITIONAL_OP expression
   58           | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS
   59           | method_call


Terminals, with rules where they appear

$end (0) 0
'=' (61) 20
error (256)
OP_PLUS (258) 54
IDENTIFIER (259) 1 2 12 13 20 26 27 28 29 30 31 34 39 40
TYPE (260) 9 28 29 34
BOOLEAN_LITERAL (261) 50
STRING_LITERAL (262) 17 44
CHAR_LITERAL (263) 49
HEX_LITERAL (264)
DECIMAL_LITERAL (265) 13 48
ERROR (266)
RELATIONAL_OP (267) 56
CONDITIONAL_OP (268) 57
ARITHMETIC_OP (269) 55
ASSIGNMENT_OP (270) 16
EQUALITY_OP (271)
OP_MINUS (272) 52 53
NEGATION (273) 51
CLASS (274) 1 2
SEMI_COLON (275) 9 16 17 21 22 23 25
COMMA (276) 10 17 20 32 41 45
CALLOUT (277) 17
IF (278) 18 19
ELSE (279) 19
FOR (280) 20
BREAK (281) 22
CONTINUE (282) 23
RETURN (283) 21
VOID (284) 30 31
START_BLOCK (285) 1 2 35 36 37 38
CLOSE_BLOCK (286) 1 2 35 36 37 38
OPEN_SQUARE_BRACKET (287) 13 40
CLOSE_SQUARE_BRACKET (288) 13 40
OPEN_PARENTHESIS (289) 17 18 19 26 27 28 29 30 31 58
CLOSE_PARENTHESIS (290) 17 18 19 26 27 28 29 30 31 58
UNARY_MINUS (291)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
body (40)
    on left: 3 4 5 6, on right: 1
field (41)
    on left: 7 8, on right: 3 4 5 6 7 36 37
field_declaration (42)
    on left: 9, on right: 7 8
id_list (43)
    on left: 10 11, on right: 9 10
id_decl (44)
    on left: 12 13, on right: 10 11
statement_list (45)
    on left: 14 15, on right: 3 6 14 37 38
statement (46)
    on left: 16 17 18 19 20 21 22 23 24 25, on right: 14 15
method_call (47)
    on left: 26 27, on right: 25 59
method (48)
    on left: 28 29 30 31, on right: 5 6
method_argument_list (49)
    on left: 32 33, on right: 29 31 32
method_argument (50)
    on left: 34, on right: 32 33
block (51)
    on left: 35 36 37 38, on right: 18 19 20 24 28 29 30 31
location (52)
    on left: 39 40, on right: 16 47
callout_arguments (53)
    on left: 41 42, on right: 17 41
c_arg (54)
    on left: 43 44, on right: 41 42
expression_list (55)
    on left: 45 46, on right: 27 45
expression (56)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59, on right: 16 18
    19 20 21 40 43 45 46 51 52 53 54 55 56 57 58


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . IDENTIFIER START_BLOCK body CLOSE_BLOCK
    2        | CLASS . IDENTIFIER START_BLOCK CLOSE_BLOCK

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS IDENTIFIER . START_BLOCK body CLOSE_BLOCK
    2        | CLASS IDENTIFIER . START_BLOCK CLOSE_BLOCK

    START_BLOCK  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS IDENTIFIER START_BLOCK . body CLOSE_BLOCK
    2        | CLASS IDENTIFIER START_BLOCK . CLOSE_BLOCK

    TYPE         shift, and go to state 6
    CLOSE_BLOCK  shift, and go to state 7

    body               go to state 8
    field              go to state 9
    field_declaration  go to state 10


State 6

    9 field_declaration: TYPE . id_list SEMI_COLON

    IDENTIFIER  shift, and go to state 11

    id_list  go to state 12
    id_decl  go to state 13


State 7

    2 program: CLASS IDENTIFIER START_BLOCK CLOSE_BLOCK .

    $default  reduce using rule 2 (program)


State 8

    1 program: CLASS IDENTIFIER START_BLOCK body . CLOSE_BLOCK

    CLOSE_BLOCK  shift, and go to state 14


State 9

    3 body: field . statement_list
    4     | field .
    5     | field . method
    6     | field . method statement_list
    7 field: field . field_declaration

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 16
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    VOID         shift, and go to state 23
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 4 (body)

    field_declaration  go to state 25
    statement_list     go to state 26
    statement          go to state 27
    method_call        go to state 28
    method             go to state 29
    block              go to state 30
    location           go to state 31


State 10

    8 field: field_declaration .

    $default  reduce using rule 8 (field)


State 11

   12 id_decl: IDENTIFIER .
   13        | IDENTIFIER . OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 32

    $default  reduce using rule 12 (id_decl)


State 12

    9 field_declaration: TYPE id_list . SEMI_COLON
   10 id_list: id_list . COMMA id_decl

    SEMI_COLON  shift, and go to state 33
    COMMA       shift, and go to state 34


State 13

   11 id_list: id_decl .

    $default  reduce using rule 11 (id_list)


State 14

    1 program: CLASS IDENTIFIER START_BLOCK body CLOSE_BLOCK .

    $default  reduce using rule 1 (program)


State 15

   26 method_call: IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS
   27            | IDENTIFIER . OPEN_PARENTHESIS expression_list CLOSE_PARENTHESIS
   39 location: IDENTIFIER .
   40         | IDENTIFIER . OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET

    OPEN_SQUARE_BRACKET  shift, and go to state 35
    OPEN_PARENTHESIS     shift, and go to state 36

    $default  reduce using rule 39 (location)


State 16

    9 field_declaration: TYPE . id_list SEMI_COLON
   28 method: TYPE . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   29       | TYPE . IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    IDENTIFIER  shift, and go to state 37

    id_list  go to state 12
    id_decl  go to state 13


State 17

   17 statement: CALLOUT . OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    OPEN_PARENTHESIS  shift, and go to state 38


State 18

   18 statement: IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block
   19          | IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE block

    OPEN_PARENTHESIS  shift, and go to state 39


State 19

   20 statement: FOR . IDENTIFIER '=' expression COMMA expression block

    IDENTIFIER  shift, and go to state 40


State 20

   22 statement: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 41


State 21

   23 statement: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 42


State 22

   21 statement: RETURN . expression SEMI_COLON

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 51


State 23

   30 method: VOID . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   31       | VOID . IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    IDENTIFIER  shift, and go to state 52


State 24

   35 block: START_BLOCK . CLOSE_BLOCK
   36      | START_BLOCK . field CLOSE_BLOCK
   37      | START_BLOCK . field statement_list CLOSE_BLOCK
   38      | START_BLOCK . statement_list CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 6
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 53

    field              go to state 54
    field_declaration  go to state 10
    statement_list     go to state 55
    statement          go to state 27
    method_call        go to state 28
    block              go to state 30
    location           go to state 31


State 25

    7 field: field field_declaration .

    $default  reduce using rule 7 (field)


State 26

    3 body: field statement_list .
   14 statement_list: statement_list . statement

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 3 (body)

    statement    go to state 56
    method_call  go to state 28
    block        go to state 30
    location     go to state 31


State 27

   15 statement_list: statement .

    $default  reduce using rule 15 (statement_list)


State 28

   25 statement: method_call . SEMI_COLON

    SEMI_COLON  shift, and go to state 57


State 29

    5 body: field method .
    6     | field method . statement_list

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 5 (body)

    statement_list  go to state 58
    statement       go to state 27
    method_call     go to state 28
    block           go to state 30
    location        go to state 31


State 30

   24 statement: block .

    $default  reduce using rule 24 (statement)


State 31

   16 statement: location . ASSIGNMENT_OP expression SEMI_COLON

    ASSIGNMENT_OP  shift, and go to state 59


State 32

   13 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET . DECIMAL_LITERAL CLOSE_SQUARE_BRACKET

    DECIMAL_LITERAL  shift, and go to state 60


State 33

    9 field_declaration: TYPE id_list SEMI_COLON .

    $default  reduce using rule 9 (field_declaration)


State 34

   10 id_list: id_list COMMA . id_decl

    IDENTIFIER  shift, and go to state 11

    id_decl  go to state 61


State 35

   40 location: IDENTIFIER OPEN_SQUARE_BRACKET . expression CLOSE_SQUARE_BRACKET

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 62


State 36

   26 method_call: IDENTIFIER OPEN_PARENTHESIS . CLOSE_PARENTHESIS
   27            | IDENTIFIER OPEN_PARENTHESIS . expression_list CLOSE_PARENTHESIS

    IDENTIFIER         shift, and go to state 15
    BOOLEAN_LITERAL    shift, and go to state 43
    CHAR_LITERAL       shift, and go to state 44
    DECIMAL_LITERAL    shift, and go to state 45
    OP_MINUS           shift, and go to state 46
    NEGATION           shift, and go to state 47
    OPEN_PARENTHESIS   shift, and go to state 48
    CLOSE_PARENTHESIS  shift, and go to state 63

    method_call      go to state 49
    location         go to state 50
    expression_list  go to state 64
    expression       go to state 65


State 37

   12 id_decl: IDENTIFIER .
   13        | IDENTIFIER . OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET
   28 method: TYPE IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   29       | TYPE IDENTIFIER . OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    OPEN_SQUARE_BRACKET  shift, and go to state 32
    OPEN_PARENTHESIS     shift, and go to state 66

    $default  reduce using rule 12 (id_decl)


State 38

   17 statement: CALLOUT OPEN_PARENTHESIS . STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    STRING_LITERAL  shift, and go to state 67


State 39

   18 statement: IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS block
   19          | IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS block ELSE block

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 68


State 40

   20 statement: FOR IDENTIFIER . '=' expression COMMA expression block

    '='  shift, and go to state 69


State 41

   22 statement: BREAK SEMI_COLON .

    $default  reduce using rule 22 (statement)


State 42

   23 statement: CONTINUE SEMI_COLON .

    $default  reduce using rule 23 (statement)


State 43

   50 expression: BOOLEAN_LITERAL .

    $default  reduce using rule 50 (expression)


State 44

   49 expression: CHAR_LITERAL .

    $default  reduce using rule 49 (expression)


State 45

   48 expression: DECIMAL_LITERAL .

    $default  reduce using rule 48 (expression)


State 46

   52 expression: OP_MINUS . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 70


State 47

   51 expression: NEGATION . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 71


State 48

   58 expression: OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 72


State 49

   59 expression: method_call .

    $default  reduce using rule 59 (expression)


State 50

   47 expression: location .

    $default  reduce using rule 47 (expression)


State 51

   21 statement: RETURN expression . SEMI_COLON
   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 73
    RELATIONAL_OP   shift, and go to state 74
    CONDITIONAL_OP  shift, and go to state 75
    ARITHMETIC_OP   shift, and go to state 76
    OP_MINUS        shift, and go to state 77
    SEMI_COLON      shift, and go to state 78


State 52

   30 method: VOID IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS block
   31       | VOID IDENTIFIER . OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block

    OPEN_PARENTHESIS  shift, and go to state 79


State 53

   35 block: START_BLOCK CLOSE_BLOCK .

    $default  reduce using rule 35 (block)


State 54

    7 field: field . field_declaration
   36 block: START_BLOCK field . CLOSE_BLOCK
   37      | START_BLOCK field . statement_list CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    TYPE         shift, and go to state 6
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 80

    field_declaration  go to state 25
    statement_list     go to state 81
    statement          go to state 27
    method_call        go to state 28
    block              go to state 30
    location           go to state 31


State 55

   14 statement_list: statement_list . statement
   38 block: START_BLOCK statement_list . CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 82

    statement    go to state 56
    method_call  go to state 28
    block        go to state 30
    location     go to state 31


State 56

   14 statement_list: statement_list statement .

    $default  reduce using rule 14 (statement_list)


State 57

   25 statement: method_call SEMI_COLON .

    $default  reduce using rule 25 (statement)


State 58

    6 body: field method statement_list .
   14 statement_list: statement_list . statement

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24

    $default  reduce using rule 6 (body)

    statement    go to state 56
    method_call  go to state 28
    block        go to state 30
    location     go to state 31


State 59

   16 statement: location ASSIGNMENT_OP . expression SEMI_COLON

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 83


State 60

   13 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL . CLOSE_SQUARE_BRACKET

    CLOSE_SQUARE_BRACKET  shift, and go to state 84


State 61

   10 id_list: id_list COMMA id_decl .

    $default  reduce using rule 10 (id_list)


State 62

   40 location: IDENTIFIER OPEN_SQUARE_BRACKET expression . CLOSE_SQUARE_BRACKET
   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    OP_PLUS               shift, and go to state 73
    RELATIONAL_OP         shift, and go to state 74
    CONDITIONAL_OP        shift, and go to state 75
    ARITHMETIC_OP         shift, and go to state 76
    OP_MINUS              shift, and go to state 77
    CLOSE_SQUARE_BRACKET  shift, and go to state 85


State 63

   26 method_call: IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    $default  reduce using rule 26 (method_call)


State 64

   27 method_call: IDENTIFIER OPEN_PARENTHESIS expression_list . CLOSE_PARENTHESIS
   45 expression_list: expression_list . COMMA expression

    COMMA              shift, and go to state 86
    CLOSE_PARENTHESIS  shift, and go to state 87


State 65

   46 expression_list: expression .
   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 73
    RELATIONAL_OP   shift, and go to state 74
    CONDITIONAL_OP  shift, and go to state 75
    ARITHMETIC_OP   shift, and go to state 76
    OP_MINUS        shift, and go to state 77

    $default  reduce using rule 46 (expression_list)


State 66

   28 method: TYPE IDENTIFIER OPEN_PARENTHESIS . CLOSE_PARENTHESIS block
   29       | TYPE IDENTIFIER OPEN_PARENTHESIS . method_argument_list CLOSE_PARENTHESIS block

    TYPE               shift, and go to state 88
    CLOSE_PARENTHESIS  shift, and go to state 89

    method_argument_list  go to state 90
    method_argument       go to state 91


State 67

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL . COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    COMMA  shift, and go to state 92


State 68

   18 statement: IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS block
   19          | IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS block ELSE block
   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    OP_PLUS            shift, and go to state 73
    RELATIONAL_OP      shift, and go to state 74
    CONDITIONAL_OP     shift, and go to state 75
    ARITHMETIC_OP      shift, and go to state 76
    OP_MINUS           shift, and go to state 77
    CLOSE_PARENTHESIS  shift, and go to state 93


State 69

   20 statement: FOR IDENTIFIER '=' . expression COMMA expression block

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 94


State 70

   52 expression: OP_MINUS expression .
   53           | expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    $default  reduce using rule 52 (expression)


State 71

   51 expression: NEGATION expression .
   53           | expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    $default  reduce using rule 51 (expression)


State 72

   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression
   58           | OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS

    OP_PLUS            shift, and go to state 73
    RELATIONAL_OP      shift, and go to state 74
    CONDITIONAL_OP     shift, and go to state 75
    ARITHMETIC_OP      shift, and go to state 76
    OP_MINUS           shift, and go to state 77
    CLOSE_PARENTHESIS  shift, and go to state 95


State 73

   54 expression: expression OP_PLUS . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 96


State 74

   56 expression: expression RELATIONAL_OP . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 97


State 75

   57 expression: expression CONDITIONAL_OP . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 98


State 76

   55 expression: expression ARITHMETIC_OP . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 99


State 77

   53 expression: expression OP_MINUS . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 100


State 78

   21 statement: RETURN expression SEMI_COLON .

    $default  reduce using rule 21 (statement)


State 79

   30 method: VOID IDENTIFIER OPEN_PARENTHESIS . CLOSE_PARENTHESIS block
   31       | VOID IDENTIFIER OPEN_PARENTHESIS . method_argument_list CLOSE_PARENTHESIS block

    TYPE               shift, and go to state 88
    CLOSE_PARENTHESIS  shift, and go to state 101

    method_argument_list  go to state 102
    method_argument       go to state 91


State 80

   36 block: START_BLOCK field CLOSE_BLOCK .

    $default  reduce using rule 36 (block)


State 81

   14 statement_list: statement_list . statement
   37 block: START_BLOCK field statement_list . CLOSE_BLOCK

    IDENTIFIER   shift, and go to state 15
    CALLOUT      shift, and go to state 17
    IF           shift, and go to state 18
    FOR          shift, and go to state 19
    BREAK        shift, and go to state 20
    CONTINUE     shift, and go to state 21
    RETURN       shift, and go to state 22
    START_BLOCK  shift, and go to state 24
    CLOSE_BLOCK  shift, and go to state 103

    statement    go to state 56
    method_call  go to state 28
    block        go to state 30
    location     go to state 31


State 82

   38 block: START_BLOCK statement_list CLOSE_BLOCK .

    $default  reduce using rule 38 (block)


State 83

   16 statement: location ASSIGNMENT_OP expression . SEMI_COLON
   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 73
    RELATIONAL_OP   shift, and go to state 74
    CONDITIONAL_OP  shift, and go to state 75
    ARITHMETIC_OP   shift, and go to state 76
    OP_MINUS        shift, and go to state 77
    SEMI_COLON      shift, and go to state 104


State 84

   13 id_decl: IDENTIFIER OPEN_SQUARE_BRACKET DECIMAL_LITERAL CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 13 (id_decl)


State 85

   40 location: IDENTIFIER OPEN_SQUARE_BRACKET expression CLOSE_SQUARE_BRACKET .

    $default  reduce using rule 40 (location)


State 86

   45 expression_list: expression_list COMMA . expression

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 105


State 87

   27 method_call: IDENTIFIER OPEN_PARENTHESIS expression_list CLOSE_PARENTHESIS .

    $default  reduce using rule 27 (method_call)


State 88

   34 method_argument: TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 106


State 89

   28 method: TYPE IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 107


State 90

   29 method: TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list . CLOSE_PARENTHESIS block
   32 method_argument_list: method_argument_list . COMMA method_argument

    COMMA              shift, and go to state 108
    CLOSE_PARENTHESIS  shift, and go to state 109


State 91

   33 method_argument_list: method_argument .

    $default  reduce using rule 33 (method_argument_list)


State 92

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA . callout_arguments CLOSE_PARENTHESIS SEMI_COLON

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    STRING_LITERAL    shift, and go to state 110
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call        go to state 49
    location           go to state 50
    callout_arguments  go to state 111
    c_arg              go to state 112
    expression         go to state 113


State 93

   18 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . block
   19          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . block ELSE block

    START_BLOCK  shift, and go to state 24

    block  go to state 114


State 94

   20 statement: FOR IDENTIFIER '=' expression . COMMA expression block
   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 73
    RELATIONAL_OP   shift, and go to state 74
    CONDITIONAL_OP  shift, and go to state 75
    ARITHMETIC_OP   shift, and go to state 76
    OP_MINUS        shift, and go to state 77
    COMMA           shift, and go to state 115


State 95

   58 expression: OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    $default  reduce using rule 58 (expression)


State 96

   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   54           | expression OP_PLUS expression .
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    ARITHMETIC_OP  shift, and go to state 76

    $default  reduce using rule 54 (expression)


State 97

   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   56           | expression RELATIONAL_OP expression .
   57           | expression . CONDITIONAL_OP expression

    OP_PLUS        shift, and go to state 73
    ARITHMETIC_OP  shift, and go to state 76
    OP_MINUS       shift, and go to state 77

    $default  reduce using rule 56 (expression)


State 98

   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression
   57           | expression CONDITIONAL_OP expression .

    OP_PLUS        shift, and go to state 73
    ARITHMETIC_OP  shift, and go to state 76
    OP_MINUS       shift, and go to state 77

    $default  reduce using rule 57 (expression)


State 99

   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   55           | expression ARITHMETIC_OP expression .
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    $default  reduce using rule 55 (expression)


State 100

   53 expression: expression . OP_MINUS expression
   53           | expression OP_MINUS expression .
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    ARITHMETIC_OP  shift, and go to state 76

    $default  reduce using rule 53 (expression)


State 101

   30 method: VOID IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 116


State 102

   31 method: VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list . CLOSE_PARENTHESIS block
   32 method_argument_list: method_argument_list . COMMA method_argument

    COMMA              shift, and go to state 108
    CLOSE_PARENTHESIS  shift, and go to state 117


State 103

   37 block: START_BLOCK field statement_list CLOSE_BLOCK .

    $default  reduce using rule 37 (block)


State 104

   16 statement: location ASSIGNMENT_OP expression SEMI_COLON .

    $default  reduce using rule 16 (statement)


State 105

   45 expression_list: expression_list COMMA expression .
   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 73
    RELATIONAL_OP   shift, and go to state 74
    CONDITIONAL_OP  shift, and go to state 75
    ARITHMETIC_OP   shift, and go to state 76
    OP_MINUS        shift, and go to state 77

    $default  reduce using rule 45 (expression_list)


State 106

   34 method_argument: TYPE IDENTIFIER .

    $default  reduce using rule 34 (method_argument)


State 107

   28 method: TYPE IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block .

    $default  reduce using rule 28 (method)


State 108

   32 method_argument_list: method_argument_list COMMA . method_argument

    TYPE  shift, and go to state 88

    method_argument  go to state 118


State 109

   29 method: TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 119


State 110

   44 c_arg: STRING_LITERAL .

    $default  reduce using rule 44 (c_arg)


State 111

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments . CLOSE_PARENTHESIS SEMI_COLON
   41 callout_arguments: callout_arguments . COMMA c_arg

    COMMA              shift, and go to state 120
    CLOSE_PARENTHESIS  shift, and go to state 121


State 112

   42 callout_arguments: c_arg .

    $default  reduce using rule 42 (callout_arguments)


State 113

   43 c_arg: expression .
   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 73
    RELATIONAL_OP   shift, and go to state 74
    CONDITIONAL_OP  shift, and go to state 75
    ARITHMETIC_OP   shift, and go to state 76
    OP_MINUS        shift, and go to state 77

    $default  reduce using rule 43 (c_arg)


State 114

   18 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block .
   19          | IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block . ELSE block

    ELSE  shift, and go to state 122

    $default  reduce using rule 18 (statement)


State 115

   20 statement: FOR IDENTIFIER '=' expression COMMA . expression block

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    expression   go to state 123


State 116

   30 method: VOID IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS block .

    $default  reduce using rule 30 (method)


State 117

   31 method: VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS . block

    START_BLOCK  shift, and go to state 24

    block  go to state 124


State 118

   32 method_argument_list: method_argument_list COMMA method_argument .

    $default  reduce using rule 32 (method_argument_list)


State 119

   29 method: TYPE IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block .

    $default  reduce using rule 29 (method)


State 120

   41 callout_arguments: callout_arguments COMMA . c_arg

    IDENTIFIER        shift, and go to state 15
    BOOLEAN_LITERAL   shift, and go to state 43
    STRING_LITERAL    shift, and go to state 110
    CHAR_LITERAL      shift, and go to state 44
    DECIMAL_LITERAL   shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    NEGATION          shift, and go to state 47
    OPEN_PARENTHESIS  shift, and go to state 48

    method_call  go to state 49
    location     go to state 50
    c_arg        go to state 125
    expression   go to state 113


State 121

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 126


State 122

   19 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE . block

    START_BLOCK  shift, and go to state 24

    block  go to state 127


State 123

   20 statement: FOR IDENTIFIER '=' expression COMMA expression . block
   53 expression: expression . OP_MINUS expression
   54           | expression . OP_PLUS expression
   55           | expression . ARITHMETIC_OP expression
   56           | expression . RELATIONAL_OP expression
   57           | expression . CONDITIONAL_OP expression

    OP_PLUS         shift, and go to state 73
    RELATIONAL_OP   shift, and go to state 74
    CONDITIONAL_OP  shift, and go to state 75
    ARITHMETIC_OP   shift, and go to state 76
    OP_MINUS        shift, and go to state 77
    START_BLOCK     shift, and go to state 24

    block  go to state 128


State 124

   31 method: VOID IDENTIFIER OPEN_PARENTHESIS method_argument_list CLOSE_PARENTHESIS block .

    $default  reduce using rule 31 (method)


State 125

   41 callout_arguments: callout_arguments COMMA c_arg .

    $default  reduce using rule 41 (callout_arguments)


State 126

   17 statement: CALLOUT OPEN_PARENTHESIS STRING_LITERAL COMMA callout_arguments CLOSE_PARENTHESIS SEMI_COLON .

    $default  reduce using rule 17 (statement)


State 127

   19 statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS block ELSE block .

    $default  reduce using rule 19 (statement)


State 128

   20 statement: FOR IDENTIFIER '=' expression COMMA expression block .

    $default  reduce using rule 20 (statement)
